{"version":3,"sources":["components/navBar.js","components/utils/mapFunctions.js","components/utils/constant.js","components/map/pieChart.js","components/map/barChart.js","components/map/treeChart.js","components/map/boxPlot.js","components/map/countryDialog.js","image/wine.svg","components/map/pieMap.js","components/map/map.js","data/sliced.csv","components/radar/radar.js","components/radar/RadarChart.js","data/wine_name_grapes.csv","data/tree.csv","data/wine_radar.csv","components/chord/comparisonRadar.js","components/chord/radial.js","components/chord/radialTree.js","components/chord/radar_style.js","components/network/networkGraph.js","components/network/network.js","App.js","reportWebVitals.js","index.js"],"names":["ListItemLink","props","icon","primary","to","renderLink","React","useMemo","forwardRef","itemProps","ref","ListItem","button","component","ListItemIcon","ListItemText","useStyles","makeStyles","root","width","ListRouter","classes","className","Paper","elevation","List","aria-label","countMap","colorMap","chroma","scale","mode","colors","length","getColor","d","i","mapStyle","feature","fillColor","properties","wine_count","weight","opacity","color","fillOpacity","highlightFeature","e","layer","target","setStyle","L","Browser","ie","opera","edge","bringToFront","colorScale","colorCategory","PieChart","state","outerRadius","innerRadius","createPieChart","bind","this","self","node","data","colorData","type","filter","name","push","select","selectAll","remove","tooltip","d3","append","attr","style","arcGenerator","pieGenerator","padAngle","value","g","l","parseInt","enter","_","on","__data__","transition","duration","html","pageX","pageY","legend","text","height","Component","BarChart","margin","top","right","bottom","left","createBarChart","sort","a","b","count","slice","x","domain","range","padding","y","nice","join","bandwidth","call","tickFormat","tickSizeOuter","ticks","TreeChart","createTreeChart","dx","dy","nodeSize","tree","maxHeight","links","children","source","descendants","parentCallback","depth","clone","lower","BoxPlot","createBoxPlot","rawData","nest","key","type_name","rollup","series","bin","map","values","price","min","max","q1","q2","q3","iqr","r0","Math","r1","quartiles","outliers","v","entries","paddingInner","paddingOuter","groups","random","Transition","Slide","direction","FullScreenDialog","treeCallbackFunction","selectedName","setState","fullData","useData","usePriceData","priceData","region_name","temp","forEach","winery_name","activeData","filter_column","myDiv","createRef","Dialog","fullScreen","open","onClose","closeDialog","TransitionComponent","AppBar","appBar","Toolbar","IconButton","onClick","Typography","variant","title","id","Grid","container","spacing","item","xs","gridCard","statsHeader","statsContent","winery_count","graphHeader","type_count","grape_count","withStyles","theme","flewGrow","backgroundColor","position","marginLeft","flex","textAlign","paddingTop","marginBottom","palette","secondary","minHeight","withTheme","bakeThePie","options","valueFunc","r","rInner","strokeWidth","pieClass","pathClassFunc","pathTitleFunc","pieLabel","pieLabelClass","origo","w","h","pieData","group","pieMap","svg","document","createElementNS","vis","xmlNode","window","XMLSerializer","serializeToString","xml","serializeXmlNode","countries","require","wine_data","price_data","geo_data","wine_geo","JSON","parse","WineMap","showDialog","admin","Icon","Default","imagePath","openDialog","country_name","geojson","mymap","zoom","center","maxZoom","clickFeature","tileLayer","attribution","accessToken","minZoom","addTo","geoJson","onEachFeature","mouseover","mouseout","resetStyle","click","bindTooltip","country","control","onAdd","div","DomUtil","create","grades","innerHTML","markerclusters","markerClusterGroup","maxClusterRadius","iconCreateFunction","cluster","getAllChildMarkers","n","reduce","rmax","iconDim","sum","_leaflet_id","DivIcon","iconSize","Point","markers","pointToLayer","latlng","myIcon","marker","addLayer","beforeAdd","removeControl","zoomLevel","getZoom","console","log","hasLayer","removeLayer","type_id","type_data","1","2","3","4","5","innerWidth","innerHeight","labels","type_labels","radarDescMap","type_map","radarChartOptions","maxValue","levels","roundStrokes","StyleRadar","originData","then","dataset","parseF","str","parseFloat","scales","sorted","lrange","floor","key_filter","chart_id","style_varietal_name","new_data","tlabels","filtered","valid","axis","actValue","cfg","labelFactor","wrapWidth","opacityArea","dotRadius","opacityCircles","allAxis","total","radius","angleSlice","PI","rScale","feMerge","axisGrid","reverse","cos","sin","pie","arc","radarLine","curve","angle","blobWrapper","RadarChart","toElement","block","items","each","getElementsByName","CompareRadar","defs","word","words","split","line","lineNumber","tspan","pop","getComputedTextLength","preventDefault","splice","findIndex","_d","newX","newY","String","mask","drawRadialChart","csvpath","radar_csv","Treedata","curNode","curPath","HAS_CHILDREN_COLOR","SELECTED_COLOR","counter","flag","curX","curY","curR","project","size","separation","parent","svgGroup","event","pathelms","querySelectorAll","classList","sel","shiftKey","selectNode","add","update","parentId","substring","lastIndexOf","stratify","x0","y0","c","children_id","child","collapseTree","nodes","nodeEnter","insert","dblclick","_children","reduceZ","selected","nodeUpdate","merge","delay","abs","nodeExit","exit","link","fullpath","idx","defaultPrevented","pow","color2","radarChartOptions2","RadialTree","dataset_radar","indexByName","Map","nameByIndex","matrix","colores","has","set","data_size","grapes","get","row","Array","from","fill","chord","sortSubgroups","sortChords","ribbon","chords","datum","onMouseOver","index","dataset_tree","target_index","onMouseOut","darker","startAngle","endAngle","svgLegned","keys","key_list","style_name","indexOf","Set","property","styleRadar","md","align","drag","simulation","active","alphaTarget","restart","subject","fx","fy","NetworkGraph","createNetwork","food_link","food_data","Object","force","strength","__proto__","sqrt","gNode","image","imageRadius","clickEvent","neighbors","mouseOverEvent","mouseOutEvent","mouseMoveEvent","wine","wineColor","wineLegend","foodColor","foodLegend","wine_styles","createData","calories","fat","carbs","protein","FoodNetwork","dimensions","selectedStyle","networkCallbackFunction","startsWith","filterData","handleClickOpen","handleClose","offsetWidth","offsetHeight","Button","maxWidth","aria-labelledby","DialogTitle","gutterBottom","wines","style_acidity_desp","style_body_desp","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","scope","rating","el","renderContent","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","mixins","zIndex","drawer","transitions","easing","sharp","leavingScreen","appBarShift","enteringScreen","menuButton","marginRight","menuButtonHidden","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","overflow","paddingBottom","paper","flexDirection","fixedHeight","App","useState","setOpen","clsx","CssBaseline","initialEntries","initialIndex","noWrap","Drawer","Divider","Container","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.51c4cb96.chunk.js","sourcesContent":["import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport List from '@material-ui/core/List';\nimport '../css/iconfont.css'\nimport {Link as RouterLink} from 'react-router-dom';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nfunction ListItemLink(props) {\n    const {icon, primary, to} = props;\n\n    const renderLink = React.useMemo(\n        () => React.forwardRef((itemProps, ref) => <RouterLink to={to} ref={ref} {...itemProps} />),\n        [to],\n    );\n\n    return (\n        <li>\n            <ListItem button component={renderLink}>\n                {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n                <ListItemText primary={primary}/>\n            </ListItem>\n        </li>\n    );\n}\n\nListItemLink.propTypes = {\n    icon: PropTypes.element,\n    primary: PropTypes.string.isRequired,\n    to: PropTypes.string.isRequired,\n};\n\nconst useStyles = makeStyles({\n    root: {\n        width: 250,\n    },\n});\n\nexport default function ListRouter() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Paper elevation={0}>\n                <List aria-label=\"main\">\n                    <ListItemLink to=\"/map\" primary=\"Wine Map\" icon={<i className=\"iconfont icon-map\"/>}/>\n                    <ListItemLink to=\"/radar\" primary=\"Taste Radar\" icon={<i className=\"iconfont icon-radar\"/>}/>\n                    <ListItemLink to=\"/tree\" primary=\"Grape-Style Chord\" icon={<i className=\"iconfont icon-tp_radial\"/>}/>\n                    <ListItemLink to=\"/network\" primary=\"Food Pair Network\" icon={<i className=\"iconfont icon-network1\"/>}/>\n                </List>\n            </Paper>\n        </div>\n    );\n}\n\n","import L from \"leaflet\";\nimport chroma from 'chroma-js'\nimport React from \"react\";\n\nexport const countMap = [100, 500, 1000, 3000, 5000, 10000, 20000, 30000, 40000];\nexport const colorMap = chroma.scale(['#f5e6e8', '#380024']).mode('lch').colors(countMap.length);\n\nexport function getColor(d) {\n    if (d) {\n        for (let i = 0; i < countMap.length; i++) {\n            if (d <= countMap[i]) return colorMap[i];\n        }\n    } else {\n        return '#D3D3D3'\n    }\n}\n\nexport function mapStyle(feature) {\n    return {\n        fillColor: getColor(feature.properties.wine_count),\n        weight: 1,\n        opacity: 0.4,\n        color: 'black',\n        fillOpacity: 0.8\n    }\n}\n\nexport function highlightFeature(e) {\n    var layer = e.target;\n\n    layer.setStyle({\n        weight: 3,\n        color: 'black',\n        fillOpacity: 1\n    });\n\n    if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {\n        layer.bringToFront();\n    }\n}\n\n\n","export const colorScale = {\n    'Red': 'rgba(177,18,38,0.73)', 'White': '#e4b953', 'Sparkling': '#898ebe',\n    'Rose': '#ffb6c1', 'Dessert': '#edec7f', 'Fortified': '#722f37'\n    // 'Red': '#ab3a3e', 'White': '#e4b953', 'Sparkling': '#898ebe',\n    // 'Rose': '#b68189', 'Dessert': '#6188a7', 'Fortified': '#6f5268'\n};\n\nexport const colorCategory = {\n    'Meat': '#f9594f',\n    'Seafood': '#3399FF',\n    'Cheese': '#ff9f17',\n    'Dessert': '#e2bc00',\n    'Vegetable & Others': '#4ad657'\n};\n\n","import React, {Component} from 'react'\nimport {select} from 'd3-selection'\nimport '../../css/pieChart.css'\nimport * as d3 from 'd3';\nimport {colorScale} from '../utils/constant'\n\nexport default class PieChart extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            outerRadius: 100,\n            innerRadius: 40\n        }\n\n        this.createPieChart = this.createPieChart.bind(this)\n        const margin = {\n            top: 50, right: 50, bottom: 50, left: 50,\n        };\n\n    }\n\n    componentDidMount() {\n        this.createPieChart()\n    }\n\n    componentDidUpdate() {\n        this.createPieChart()\n    }\n\n    createPieChart() {\n        const self = this;\n        const node = this.node;\n        const data = this.props.data;\n        const width = self.props.width;\n\n        if (data) {\n            let colorData = [];\n            for (let type in colorScale) {\n                if (data.filter(d => d.name === type).length > 0) colorData.push({\n                    'name': type,\n                    'color': colorScale[type]\n                });\n            }\n\n            select(node).selectAll('*').remove();\n\n            const tooltip = d3.select('#dashboardContainer')\n                .append(\"div\")\n                .attr(\"class\", \"tooltip\")\n                .style(\"opacity\", 0);\n\n            const arcGenerator = d3\n                .arc()\n                .innerRadius(self.state.innerRadius)\n                .outerRadius(self.state.outerRadius);\n\n            const pieGenerator = d3\n                .pie()\n                .padAngle(0)\n                .value((d) => d.value);\n\n            const g = select(node)\n                .append('g')\n                .attr('transform', `translate(120, 100)`);\n\n            const l = select(node)\n                .append('g')\n                .attr('transform', `translate(${parseInt(width) - 70}, 40)`);\n\n            const arc = g\n                .selectAll()\n                .data(pieGenerator(data))\n                .enter();\n\n            const mouseOverEvent = d => {\n                const data = d.target.__data__.data;\n                tooltip.transition()\n                    .duration(100)\n                    .style(\"opacity\", .8);\n                tooltip.html(\"<p>Name: \" + data.name + \"</p> <p> Wine Count: \" + data.value  + \"</p>\")\n                    .style(\"left\", () => d.pageX + 'px')\n                    .style(\"top\", () => d.pageY + 'px');\n            };\n\n            const mouseOutEvent = () => {\n                tooltip.transition()\n                    .duration(100)\n                    .style(\"opacity\", 0);\n            };\n\n            const mouseMoveEvent = d => {\n                tooltip.style(\"left\", (d.pageX) + \"px\")\n                    .style(\"top\", (d.pageY) + \"px\");\n            };\n\n            arc.append('path')\n                .attr('d', arcGenerator)\n                .style('fill', (i, _) => colorScale[i.data.name])\n                .style('stroke', '#474747')\n                .style('stroke-width', 1)\n                .style('stroke-opacity', 0.6)\n                .on('mouseover.tooltip', mouseOverEvent)\n                .on(\"mouseout.tooltip\", mouseOutEvent)\n                .on(\"mousemove\", mouseMoveEvent);\n\n\n            const legend = l.selectAll('.chart-legend')\n                .data(colorData)\n                .enter()\n                .append('g')\n                .attr('class', 'chart-legend')\n                .attr('transform', (_, i) => `translate(0, ${i * 20})`)\n            ;\n\n            legend.append('rect')\n                .attr('width', 10)\n                .attr('height', 10)\n                .attr('stroke', 'black')\n                .style('stroke-width', 0.5)\n                .style('fill', d => d.color)\n            ;\n\n            legend.append('text')\n                .attr('x', 15)\n                .attr('y', 8)\n                .attr('font-size', 10)\n                .text(d => d.name)\n            ;\n        }\n\n    }\n\n    render() {\n        return <svg ref={node => this.node = node} data={this.props.data}\n                    width={this.props.width} height={this.props.height}>\n        </svg>\n    }\n}\n\n","import React, {Component} from 'react'\nimport {select} from 'd3-selection'\nimport * as d3 from 'd3';\nimport { colorScale } from '../utils/constant'\n\nexport default class BarChart extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            outerRadius: 100,\n            innerRadius: 10,\n            margin : {\n                top: 15, right: 20, bottom: 20, left: 40,\n            }\n        }\n\n        this.createBarChart = this.createBarChart.bind(this)\n        // const width = 2 * this.state.outerRadius + margin.left + margin.right;\n        // const height = 2 * this.state.outerRadius + margin.top + margin.bottom;\n\n\n    }\n\n    componentDidMount() {\n        this.createBarChart()\n    }\n\n    componentDidUpdate() {\n        this.createBarChart()\n    }\n\n    createBarChart() {\n        const self = this;\n        const node = this.node;\n        const data = self.props.data.sort((a, b) => b.count - a.count).slice(0, 5);\n        const margin = this.state.margin;\n        const width = self.props.width;\n        const height = self.props.height;\n\n        if (data) {\n            select(node).selectAll('*').remove()\n\n            const x = d3.scaleBand()\n                .domain(d3.range(data.length))\n                .range([margin.left, width - margin.right])\n                .padding(0.1);\n\n            const y = d3.scaleLinear()\n                .domain([0, d3.max(data, d => d.count)]).nice()\n                .range([height - margin.bottom, margin.top]);\n\n            const xAxis = g => g\n                .attr(\"transform\", `translate(0,${height - margin.bottom})`)\n                .call(d3.axisBottom(x).tickFormat(i => data[i].name).tickSizeOuter(0));\n\n            const yAxis = g => g\n                .attr(\"transform\", `translate(${margin.left},0)`)\n                .call(d3.axisLeft(y).ticks(5))\n                .call(g => g.append(\"text\")\n                    .attr(\"x\", -margin.left)\n                    .attr(\"y\", 10)\n                    .attr(\"fill\", \"currentColor\")\n                    .attr(\"text-anchor\", \"start\")\n                    .text(data.y));\n\n            const g = select(node)\n                .append('g');\n\n            g.append(\"g\")\n                .selectAll(\"rect\")\n                .data(data)\n                .join(\"rect\")\n                .attr(\"fill\", \"#ddabae\")\n                .attr(\"x\", (d, i) => x(i))\n                .attr(\"y\", d => y(d.count))\n                .attr(\"height\", d => y(0) - y(d.count))\n                .attr(\"width\", x.bandwidth())\n                .attr('stroke', 'black');\n\n            g.append(\"g\")\n                .call(xAxis)\n                .selectAll(\"text\")\n                .attr(\"font-size\", 8.5)\n\n            g.append(\"g\")\n                .call(yAxis);\n\n            g.append(\"text\")\n                .attr(\"text-anchor\", \"start\")\n                .attr('font-size', '10px')\n                .attr(\"x\", 0)\n                .attr(\"y\", margin.top - 4)\n                .text(\"Number of Wines\")\n        }\n\n\n        // arc.append('text')\n        //     .attr('text-anchor', 'middle')\n        //     .attr('alignment-baseline', 'middle')\n        //     .text((d) => d.data.name)\n        //     .attr('font-size', 15)\n        //     .style('fill', '#ffffff')\n        //     .attr('transform', (d) => {\n        //         const [x, y] = arcGenerator.centroid(d);\n        //         return `translate(${x}, ${y})`;\n        //     });\n\n    }\n\n    render() {\n        return <svg ref={node => this.node = node}\n                    width={this.props.width} height={this.props.height}>\n        </svg>\n    }\n}\n\n","import React, {Component} from 'react'\nimport {select} from 'd3-selection'\nimport * as d3 from 'd3';\nimport '../../css/treeChart.css'\n\nexport default class TreeChart extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            outerRadius: 100,\n            innerRadius: 10,\n\n        }\n\n        this.createTreeChart = this.createTreeChart.bind(this)\n    }\n\n    componentDidMount() {\n        this.createTreeChart()\n    }\n\n    componentDidUpdate() {\n        this.createTreeChart()\n    }\n\n    createTreeChart() {\n        const self = this;\n        const node = this.node;\n        const data = self.props.data;\n        const width = self.props.width - 100;\n        const margin = {\n            top: 40, right: 20, bottom: 20, left: 50,\n        }\n\n        if (data) {\n            select(node).selectAll('*').remove()\n\n            const tree = data => {\n                const root = d3.hierarchy(data).sort((a, b) => {\n                    d3.descending(a.height, b.height) || d3.ascending(a.data.name, b.data.name)\n                });\n                root.dx = 10;\n                root.dy = width / (root.height + 1);\n                return d3.cluster().nodeSize([root.dx, root.dy])(root);\n            };\n\n            const root = tree(data);\n\n            const maxHeight = -root.links()[0].target.children[0].x + margin.top;\n\n            const g = select(node).append('g')\n                .attr('transform', `translate(150, ${maxHeight})`);\n\n            g.append(\"g\")\n                .attr(\"fill\", \"none\")\n                .attr(\"stroke\", \"#555\")\n                .attr(\"stroke-opacity\", 0.4)\n                .attr(\"stroke-width\", 1.5)\n                .selectAll(\"path\")\n                .data(root.links())\n                .join(\"path\")\n                .attr(\"d\", d => `\n        M${d.target.y},${d.target.x}\n        C${d.source.y + root.dy / 2},${d.target.x}\n         ${d.source.y + root.dy / 2},${d.source.x}\n         ${d.source.y},${d.source.x}\n      `);\n\n            g.append(\"g\")\n                .selectAll(\"circle\")\n                .data(root.descendants())\n                .join(\"circle\")\n                .attr('class', 'treeNode')\n                .attr(\"cx\", d => d.y)\n                .attr(\"cy\", d => d.x)\n                .attr(\"fill\", d => d.children ? \"#920036\" : \"#722f37\")\n                .attr(\"stroke\", 'black')\n                .attr(\"stroke-width\", 1)\n                .attr(\"r\", 3.5)\n                .attr(\"opacity\", d => d.data.name === self.props.name ? 1 : 0.4)\n                .on('click', (_, d) => self.props.parentCallback(d.data.name, d.depth));\n\n            g.append(\"g\")\n                .attr(\"font-family\", \"sans-serif\")\n                .attr(\"font-size\", 10)\n                .attr(\"stroke-linejoin\", \"round\")\n                .attr(\"stroke-width\", 3)\n                .selectAll(\"text\")\n                .data(root.descendants())\n                .join(\"text\")\n                .attr(\"x\", d => d.y)\n                .attr(\"y\", d => d.x)\n                .attr(\"dy\", \"0.31em\")\n                .attr(\"dx\", d => d.children ? -6 : 6)\n                .text(d => d.data.name)\n                .filter(d => d.children)\n                .attr(\"text-anchor\", \"end\")\n                .clone(true).lower()\n                .attr(\"stroke\", \"white\");\n        }\n\n\n    }\n\n    render() {\n        return <svg ref={node => this.node = node}\n                    width={this.props.width} height={this.props.height}>\n        </svg>\n    }\n}\n\n","import React, {Component} from 'react'\nimport {select} from 'd3-selection'\nimport '../../css/pieChart.css'\nimport * as d3 from 'd3';\nimport {colorScale} from '../utils/constant'\nimport {nest} from 'd3-collection'\nimport _, { map } from 'underscore'\n\nexport default class BoxPlot extends Component {\n    constructor(props) {\n        super(props)\n        this.createBoxPlot = this.createBoxPlot.bind(this)\n    }\n\n    componentDidMount() {\n        this.createBoxPlot()\n    }\n\n    componentDidUpdate() {\n        this.createBoxPlot()\n    }\n\n    createBoxPlot() {\n        const self = this;\n        const node = this.node;\n        const rawData = this.props.data\n        const width = self.props.width;\n        const height = self.props.height - 200;\n        const margin = ({top: 50, right: 20, bottom: 30, left: 60})\n\n        if (rawData) {\n            select(node).selectAll('*').remove()\n\n            const data = nest()\n                .key(function (d) {\n                    return d.type_name;\n                })\n                .rollup(function (series) {\n                    const bin = series.map(d => d);\n                    const values = series.map(d => d.price);\n                    values.sort((a, b) => a - b);\n                    const min = values[0];\n                    const max = values[values.length - 1];\n                    const q1 = d3.quantile(values, 0.25);\n                    const q2 = d3.quantile(values, 0.50);\n                    const q3 = d3.quantile(values, 0.75);\n                    const iqr = q3 - q1; // interquartile range\n                    const r0 = Math.max(min, q1 - iqr * 1.5);\n                    const r1 = Math.min(max, q3 + iqr * 1.5);\n                    bin.quartiles = [q1, q2, q3];\n                    bin.range = [r0, r1];\n                    bin.outliers = bin.filter(v => v.price < 10 || v.price > 1000); // TODO\n                    return bin;\n                })\n                .entries(rawData);\n\n\n            const x = d3.scaleBand()\n                .range([margin.left, width - margin.right])\n                .domain(data.map(d => d.key))\n                .paddingInner(1)\n                .paddingOuter(.5)\n\n            const y = d3.scaleLinear()\n                .domain([d3.min(rawData, d => d.price), Math.min(d3.max(rawData, d => d.price), 300)]).nice()\n                .range([height - margin.bottom, margin.top])\n\n            const xAxis = g => g\n                .attr(\"transform\", `translate(0,${height - margin.bottom})`)\n                .call(d3.axisBottom(x).ticks(4).tickSizeOuter(0))\n\n            const yAxis = g => g\n                .attr(\"transform\", `translate(${margin.left},0)`)\n                .call(d3.axisLeft(y).ticks(null, \"s\"))\n                .call(g => g.select(\".domain\").remove())\n\n            const boxWidth = 50;\n            const jitterWidth = 40;\n\n            const groups = select(node).selectAll(\"g\")\n                .data(data)\n                .join(\"g\")\n                .attr(\"transform\", d => `translate(${x(d.key)}, 0)`)\n                .attr(\"class\", d => d.key);\n\n\n            groups\n                .selectAll(\"vertLine\")\n                .data(d => [d.value.range])\n                .join(\"line\")\n                .attr(\"class\", \"vertLine\")\n                .attr(\"stroke\", \"#C0C0C0\")\n                .attr('stroke-width', '1px')\n                .style(\"width\", 40)\n                .attr(\"x1\", 0)\n                .attr(\"x2\", 0)\n                .attr(\"y1\", range => y(range[0]))\n                .attr(\"y2\", range => y(range[1]));\n\n            groups\n                .selectAll(\"points\")\n                .data(d => {\n                    return (d.value.filter(v => v.price < 300 || !('price' in v)).slice(0, 200))\n                    if (d.value.length > 200) {\n                        return d.value.slice(0, 200);\n                    } else return d.value;\n                    // _.sample(d.value.filter(v => v.price < 300), 200)\n                })\n                .join(\"circle\")\n                .attr(\"cx\", d => 0 - jitterWidth / 2 + Math.random() * jitterWidth)\n                .attr(\"cy\", d => y(d.price))\n                .attr(\"r\", 2)\n                .style(\"fill\", d => colorScale[d.type_name])\n                .attr(\"fill-opacity\", 0.9);\n\n            groups\n                .selectAll(\"box\")\n                .data(d => [d])\n                .join(\"rect\")\n                .attr(\"class\", \"box\")\n                .attr(\"x\", -boxWidth / 2)\n                .attr(\"y\", d => y(d.value.quartiles[2]))\n                .attr(\"height\", d => y(d.value.quartiles[0]) - y(d.value.quartiles[2]))\n                .attr(\"width\", boxWidth)\n                .attr(\"stroke\", \"#808080\")\n                .style(\"fill\", d=>colorScale[d.key])\n                .style(\"fill-opacity\", 0.6);\n\n            groups\n                .selectAll(\"horizontalLine\")\n                .data(d => [d.value.range[0], d.value.quartiles[1], d.value.range[1]])\n                .join(\"line\")\n                .attr(\"class\", \"horizontalLine\")\n                .attr(\"stroke\", \"#808080\")\n                .attr('stroke-width', '1px')\n                .style(\"width\", 40)\n                .attr(\"x1\", -boxWidth / 2)\n                .attr(\"x2\", +boxWidth / 2)\n                .attr(\"y1\", d => y(d))\n                .attr(\"y2\", d => y(d));\n\n\n            select(node).append(\"g\")\n                .call(xAxis);\n\n            select(node).append(\"g\")\n                .call(yAxis)\n        }\n    }\n\n    render() {\n        return <svg ref={node => this.node = node} data={this.props.data}\n                    width={this.props.width} height={this.props.height}>\n        </svg>\n    }\n}\n\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Slide from '@material-ui/core/Slide';\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper';\nimport PieChart from './pieChart'\nimport BarChart from './barChart'\nimport TreeChart from './treeChart'\nimport BoxPlot from './boxPlot'\n\nconst styles = (theme) => ({\n    root: {\n        flewGrow: 1\n    },\n    appBar: {\n        backgroundColor: '#722f37',\n        position: 'relative',\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n    statsHeader: {\n        textAlign: 'center',\n        color: '#480027',\n        paddingTop: '20px',\n        marginBottom: '50px'\n    },\n    graphHeader: {\n        textAlign: 'center',\n        color: '#480027',\n        marginBottom: '8px'\n    },\n    statsContent: {\n        color: '#920036'\n    },\n    gridCard: {\n        marginLeft:'20px',\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        minHeight: '250px',\n    }\n\n});\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n\nclass FullScreenDialog extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fullData: this.props.activeData,\n            useData: this.props.activeData,\n            priceData: this.props.priceData,\n            filter: this.props.activeData.name,\n            filter_column: 'country_name',\n            usePriceData: this.props.priceData\n        }\n        this.treeCallbackFunction = this.treeCallbackFunction.bind(this)\n        this.myDiv = React.createRef()\n    }\n\n    componentDidUpdate() {\n        const self = this;\n        if (self.state.fullData !== self.props.activeData) {\n            self.setState({\n                fullData: self.props.activeData, useData: self.props.activeData, priceData:\n                self.props.priceData, filter: this.props.activeData.name, usePriceData: self.props.priceData\n            });\n        }\n    }\n\n    treeCallbackFunction = (selectedName, depth) => {\n        if (this.state.filter === selectedName || depth === 0) {\n            this.setState({\n                filter: this.state.fullData.name,\n                useData: this.state.fullData,\n                usePriceData: this.state.priceData\n            })\n        } else {\n            var data;\n            if (depth === 1) {\n                data = this.state.fullData.children.filter(d => d.name === selectedName);\n                this.setState({usePriceData: this.state.priceData.filter(d => d.region_name === selectedName)})\n            } else {\n                let temp = [];\n                this.state.fullData.children.forEach(d => temp.push(...d.children));\n                data = temp.filter(d => d.name === selectedName)\n                this.setState({usePriceData: this.state.priceData.filter(d => d.winery_name === selectedName)})\n            }\n            this.setState({filter: selectedName, useData: data[0]})\n        }\n    };\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <div ref={this.myDiv}>\n                <Dialog fullScreen open={this.props.open} onClose={this.props.closeDialog}\n                        TransitionComponent={Transition}>\n                    <AppBar className={classes.appBar}>\n                        <Toolbar>\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={this.props.closeDialog}\n                                        aria-label=\"close\">\n                                <CloseIcon/>\n                            </IconButton>\n                            <Typography variant=\"h6\" className={classes.title}>\n                                {this.props.properties.name}\n                            </Typography>\n                        </Toolbar>\n                    </AppBar>\n                    <div className={classes.root} id=\"dashboardContainer\">\n                        <Grid container spacing={3}>\n                            <Grid item xs>\n                                <Paper className={classes.gridCard}>\n                                    <h1 className={classes.statsHeader}>Number of Wineries</h1>\n                                    <h1 className={classes.statsContent}>{this.state.useData.winery_count || 1}</h1>\n                                </Paper>\n                            </Grid>\n                            <Grid item xs>\n                                <Paper className={classes.gridCard}>\n                                    <h1 className={classes.statsHeader}>Number of Wines</h1>\n\n                                    <h1 className={classes.statsContent}>{this.state.useData.wine_count}</h1>\n                                </Paper>\n                            </Grid>\n                            <Grid item xs>\n                                <h1 className={classes.graphHeader}>Wine Type</h1>\n                                <PieChart data={this.state.useData.type_count} width='300' height='250'/>\n                            </Grid>\n                            <Grid item xs>\n                                <h1 className={classes.graphHeader}>Top 5 Popular Grape Type</h1>\n                                <BarChart data={this.state.useData.grape_count} width='400' height='220'/>\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={3}>\n                            <Grid item xs>\n                                <h1 className={classes.graphHeader}>Winery Dendrogram</h1>\n                                <TreeChart data={this.state.fullData} width='1000' height='1000'\n                                           name={this.state.filter}\n                                           parentCallback={this.treeCallbackFunction}/>\n                            </Grid>\n                            <Grid item xs>\n                                <h1 className={classes.graphHeader}> Price Boxplot</h1>\n                                <BoxPlot width='400' height='600' data={this.state.usePriceData}/>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </Dialog>\n            </div>\n        );\n    }\n\n}\n\nexport default withStyles(styles, {withTheme: true})(FullScreenDialog);\n","export default __webpack_public_path__ + \"static/media/wine.70ecc137.svg\";","import L from 'leaflet'\nimport * as d3 from 'd3';\nimport 'leaflet.markercluster';\nimport {colorScale} from \"../utils/constant\";\n\n\n// var geojson,\n//     metadata,\n//     geojsonPath = 'traffic_accidents.geojson',\n//     categoryField = '5074', //This is the fieldname for marker category (used in the pie and legend)\n//     iconField = '5065', //This is the fieldame for marker icon\n//     popupFields = ['5065','5055','5074'], //Popup will display these fields\n//     tileServer = 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n//     tileAttribution = 'Map data: <a href=\"http://openstreetmap.org\">OSM</a>',\n//     rmax = 30, //Maximum radius for cluster pies\n//     markerclusters = L.markerClusterGroup({\n//         maxClusterRadius: 2*rmax,\n//         iconCreateFunction: defineClusterIcon //this is where the magic happens\n//     }),\n//     map = L.map('map').setView([59.95, 10.78], 8);\n//\n// //Add basemap\n// L.tileLayer(tileServer, {attribution: tileAttribution,  maxZoom: 15}).addTo(map);\n// //and the empty markercluster layer\n// map.addLayer(markerclusters);\n//\n// //Ready to go, load the geojson\n// export function pieMap(geojsonPath) {\n//     d3.json(geojsonPath, function (error, data) {\n//         if (!error) {\n//             console.log(data)\n//             geojson = data;\n//             metadata = data.properties;\n//             var markers = L.geoJson(geojson, {\n//                 pointToLayer: defineFeature,\n//                 onEachFeature: defineFeaturePopup\n//             });\n//             markerclusters.addLayer(markers);\n//             map.fitBounds(markers.getBounds());\n//             map.attributionControl.addAttribution(metadata.attribution);\n//             renderLegend();\n//         } else {\n//             console.log('Could not load data...');\n//         }\n//     });\n// }\n//\n// function defineFeature(feature, latlng) {\n//     var myIcon = {\n//         iconSize: [12, 12]\n//     };\n//     return L.marker(latlng, {iconUrl: '../image/wine.svg', iconSize: [12, 12]});\n// }\n//\n// function defineFeaturePopup(feature, layer) {\n//     var props = feature.properties,\n//         fields = metadata.fields,\n//         popupContent = '';\n//\n//     popupFields.map( function(key) {\n//         if (props[key]) {\n//             var val = props[key],\n//                 label = fields[key].name;\n//             if (fields[key].lookup) {\n//                 val = fields[key].lookup[val];\n//             }\n//             popupContent += '<span class=\"attribute\"><span class=\"label\">'+label+':</span> '+val+'</span>';\n//         }\n//     });\n//     popupContent = '<div class=\"map-popup\">'+popupContent+'</div>';\n//     layer.bindPopup(popupContent,{offset: L.point(1,-2)});\n// }\n\n// function defineClusterIcon(cluster) {\n//     var children = cluster.getAllChildMarkers(),\n//         n = children.length, //Get number of markers in cluster\n//         strokeWidth = 1, //Set clusterpie stroke width\n//         r = rmax-2*strokeWidth-(n<10?12:n<100?8:n<1000?4:0), //Calculate clusterpie radius...\n//         iconDim = (r+strokeWidth)*2, //...and divIcon dimensions (leaflet really want to know the size)\n//         data = d3.group() //Build a dataset for the pie chart\n//             .key(function(d) { return d.feature.properties[categoryField]; })\n//             .entries(children, d3.map),\n//         //bake some svg markup\n//         html = bakeThePie({data: data,\n//             valueFunc: function(d){return d.values.length;},\n//             strokeWidth: 1,\n//             outerRadius: r,\n//             innerRadius: r-10,\n//             pieClass: 'cluster-pie',\n//             pieLabel: n,\n//             pieLabelClass: 'marker-cluster-pie-label',\n//             pathClassFunc: function(d){return \"category-\"+d.data.key;},\n//             pathTitleFunc: function(d){return metadata.fields[categoryField].lookup[d.data.key]+' ('+d.data.values.length+' accident'+(d.data.values.length!=1?'s':'')+')';}\n//         }),\n//         //Create a new divIcon and assign the svg markup to the html property\n//         myIcon = new L.DivIcon({\n//             html: html,\n//             className: 'marker-cluster',\n//             iconSize: new L.Point(iconDim, iconDim)\n//         });\n//     return myIcon;\n// }\n\n/*function that generates a svg markup for the pie chart*/\nexport function bakeThePie(options) {\n    /*data and valueFunc are required*/\n    if (!options.data || !options.valueFunc) {\n        return '';\n    }\n    var data = options.data,\n        valueFunc = options.valueFunc,\n        r = options.outerRadius ? options.outerRadius : 28, //Default outer radius = 28px\n        rInner = options.innerRadius ? options.innerRadius : r - 10, //Default inner radius = r-10\n        strokeWidth = options.strokeWidth ? options.strokeWidth : 1, //Default stroke is 1\n        pathClassFunc = options.pathClassFunc ? options.pathClassFunc : function () {\n            return '';\n        }, //Class for each path\n        pathTitleFunc = options.pathTitleFunc ? options.pathTitleFunc : function () {\n            return '';\n        }, //Title for each path\n        pieClass = options.pieClass ? options.pieClass : 'marker-cluster-pie', //Class for the whole pie\n        pieLabel = options.pieLabel ? options.pieLabel : d3.sum(data, valueFunc), //Label for the whole pie\n        pieLabelClass = options.pieLabelClass ? options.pieLabelClass : 'marker-cluster-pie-label',//Class for the pie label\n        origo = (r + strokeWidth), //Center coordinate\n        w = origo * 2, //width and height of the svg element\n        h = w\n    // donut = d3.pie(),\n    // arc = d3.arc().innerRadius(rInner).outerRadius(r);\n\n    var pieData = [];\n    if (options.group !== 0) {\n        var pieMap = {};\n        for (const [key, value] of data.entries()) {\n            const type_count = value[0].feature.properties.type_count;\n            type_count.forEach(d => {\n                const name = d.name;\n                if (name in pieMap) pieMap[name]['value'] += d.value;\n                else pieMap[name] = {\"name\": name, \"value\": d.value};\n            })\n        }\n        for (const v in pieMap) {\n            pieData.push(pieMap[v]);\n        }\n    } else {\n        pieData = data.properties.type_count\n    }\n\n    //Create an svg element\n    var svg = document.createElementNS(d3.namespace.svg, 'svg');\n    //Create the pie chart\n    var vis = d3.select(svg)\n        .data([data])\n        .attr('class', pieClass)\n        .attr('width', w)\n        .attr('height', h);\n\n    const arcGenerator = d3\n        .arc()\n        .innerRadius(rInner)\n        .outerRadius(r);\n\n    const pieGenerator = d3\n        .pie()\n        .padAngle(0)\n        .value((d) => d.value);\n\n    const g = vis\n        .append('g')\n        .attr('transform', `translate(${origo}, ${origo})`);\n\n    const pieArc = g\n        .selectAll()\n        .data(pieGenerator(pieData))\n        .enter();\n\n    const slices = pieArc.append('path')\n        .attr('d', arcGenerator)\n        .attr('fill', (i, _) => colorScale[i.data.name])\n        .attr('stroke-width', 1)\n\n\n    vis.append('text')\n        .attr('x', origo)\n        .attr('y', origo)\n        .attr('class', pieLabelClass)\n        .attr('text-anchor', 'middle')\n        //.attr('dominant-baseline', 'central')\n        /*IE doesn't seem to support dominant-baseline, but setting dy to .3em does the trick*/\n        .attr('font-weight', 300 + 500 * Math.min(Math.max(0, pieLabel / 4000), 1))\n        .attr('dy', '.3em')\n        .text(pieLabel);\n    //Return the svg-markup rather than the actual element\n    return serializeXmlNode(svg);\n}\n\n\n// /*Helper function*/\nfunction serializeXmlNode(xmlNode) {\n    if (typeof window.XMLSerializer != \"undefined\") {\n        return (new window.XMLSerializer()).serializeToString(xmlNode);\n    } else if (typeof xmlNode.xml != \"undefined\") {\n        return xmlNode.xml;\n    }\n    return \"\";\n}\n","import React from 'react'\nimport L from 'leaflet'\nimport '../../css/map.css'\nimport 'leaflet/dist/leaflet.css'\nimport {colorMap, countMap, getColor, highlightFeature, mapStyle} from \"../utils/mapFunctions\";\nimport FullScreenDialog from './countryDialog'\nimport wineIcon from '../../image/wine.svg';\nimport 'leaflet.markercluster';\nimport {bakeThePie} from \"./pieMap\";\nimport 'leaflet.markercluster/dist/MarkerCluster.css'\nimport 'leaflet.markercluster/dist/MarkerCluster.Default.css'\nimport * as d3 from \"d3\";\n\nconst countries = require('../../data/countries.geo.json');\nconst wine_data = require('../../data/wine_data.json');\nconst price_data = require('../../data/wine_price.json');\nconst geo_data = require('../../data/wine_geo.json');\n\nconst wine_geo = JSON.parse(geo_data);\n\nexport default class WineMap extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showDialog: false,\n            properties: {admin: ''},\n            activeData: [],\n            priceData: []\n        }\n        L.Icon.Default.imagePath = 'images/';\n        this.openDialog = this.openDialog.bind(this);\n        this.closeDialog = this.closeDialog.bind(this);\n    }\n\n    openDialog(properties) {\n        this.setState({\n            showDialog: true,\n            properties: properties,\n            activeData: wine_data.filter(d => d.name === properties.name)[0],\n            priceData: price_data.filter(d => d.country_name === properties.name)\n        });\n    }\n\n    closeDialog() {\n        this.setState({showDialog: false})\n    }\n\n    componentDidMount() {\n        let self = this;\n\n        // Choropleth map layer\n        const mymap = L.map('mapid', {zoom: 3, center: [46, 1], maxZoom: 13});\n        L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {\n            attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n            accessToken: 'pk.eyJ1Ijoiampib3k5NiIsImEiOiJja203ZXZkYTgwNjN3MnZtZDJyZWFtdHZtIn0.CF9MEkv7qD15uEJqq499ig',\n            maxZoom: 13,\n            id: 'mapbox/light-v10',\n            minZoom: 3\n        }).addTo(mymap);\n\n        var geojson;\n\n        function clickFeature(e) {\n            const feature = e.target.feature;\n            if (feature.properties.wine_count) self.openDialog(feature.properties)\n        }\n\n        function onEachFeature(feature, layer) {\n            layer.on({\n                mouseover: highlightFeature,\n                mouseout: e => geojson.resetStyle(e.target),\n                click: clickFeature\n            });\n            layer.bindTooltip(\"Country: \" + feature.country + '<br/> Wine count: ' + (feature.properties.wine_count? feature.properties.wine_count : 0))\n        }\n\n        geojson = L.geoJson(countries, {\n            style: mapStyle,\n            onEachFeature: onEachFeature\n        }).addTo(mymap)\n\n        //    Custom legend control\n        const legend = L.control({position: 'bottomright'});\n        legend.onAdd = function (map) {\n            let div = L.DomUtil.create('div', 'info legend'),\n                grades = countMap;\n            div.innerHTML += '<span style=\"font-weight: bold\"> Number of Wines </span><br>'\n            for (let i = 0; i < grades.length; i++) {\n                div.innerHTML +=\n                    '<i style=\"background:' + getColor(grades[i]) + '\"></i> ' +\n                    (grades[i - 1] ? grades[i - 1] : '0') + '&ndash;' + grades[i] + '<br>';\n            }\n            return div;\n        };\n        legend.addTo(mymap);\n\n        // const choroLayerGroup = L.FeatureGroup([geojson]);\n\n        // PieMap\n        const rmax = 27\n\n        // L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {\n        //     attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n        //     accessToken: 'pk.eyJ1Ijoiampib3k5NiIsImEiOiJja203ZXZkYTgwNjN3MnZtZDJyZWFtdHZtIn0.CF9MEkv7qD15uEJqq499ig',\n        //     maxZoom: 15,\n        //     id: 'mapbox/light-v10',\n        //     minZoom: 6\n        // }).addTo(pieMapLayerGroup);\n\n        function defineClusterIcon(cluster) {\n            var children = cluster.getAllChildMarkers(),\n                n = children.reduce((a, b) => a + b.feature.properties.wine_count, 0), //Get number of markers in cluster\n                strokeWidth = 1, //Set clusterpie stroke width\n                r = rmax-2*strokeWidth-(n<10?15:n<50?13:n<100?11:n<500?9:n<1000?7:n<2000?5:n<4000?3:n<5000?1:0), //Calculate clusterpie radius...\n                iconDim = (r+strokeWidth)*2, //...and divIcon dimensions (leaflet really want to know the size)\n\n                data = d3.group(children, d => d.feature.properties),\n                //bake some svg markup\n                html = bakeThePie({data: data,\n                    valueFunc: function(d){return Math.sum(d.values.forEach(d => d.value[0].feature.properties.winery_count));},\n                    strokeWidth: 1,\n                    outerRadius: r,\n                    innerRadius: r - 4,\n                    pieClass: 'cluster-pie',\n                    pieLabel: n,\n                    pieLabelClass: 'marker-cluster-pie-label',\n                    pathClassFunc: function(d){return \"category-1\";},\n                    pathTitleFunc: function(d){return d.feature._leaflet_id;}\n                }),\n                //Create a new divIcon and assign the svg markup to the html property\n                myIcon = new L.DivIcon({\n                    html: html,\n                    className: 'marker-cluster',\n                    iconSize: new L.Point(iconDim, iconDim)\n                });\n            return myIcon;\n        }\n\n\n        let markerclusters = L.markerClusterGroup({\n            maxClusterRadius: 2 * rmax,\n            iconCreateFunction: defineClusterIcon //this is where the magic happens\n        })\n\n        function defineFeature(feature, latlng) {\n            var n = feature.properties.wine_count, //Get number of markers in cluster\n                strokeWidth = 1, //Set clusterpie stroke width\n                r = rmax-2*strokeWidth-(n<10?15:n<50?13:n<100?11:n<500?9:n<1000?7:n<2000?5:n<4000?3:n<5000?1:0), //Calculate clusterpie radius...\n                iconDim = (r+strokeWidth)*2,\n\n                html = bakeThePie({data: feature,\n                valueFunc: function(d){return Math.sum(d.values.forEach(d => d.value[0].feature.properties.winery_count));},\n                strokeWidth: 1,\n                    group: 0,\n                outerRadius: r,\n                innerRadius: r - 4,\n                pieClass: 'cluster-pie',\n                pieLabel: n,\n                pieLabelClass: 'marker-cluster-pie-label',\n                pathClassFunc: function(d){return \"category-1\";},\n                pathTitleFunc: function(d){return d.feature._leaflet_id}\n            })\n\n            const myIcon =  new L.DivIcon({\n                html: html,\n                className: 'marker-cluster',\n                iconSize: new L.Point(iconDim, iconDim)\n            });\n            return L.marker(latlng, {icon: myIcon})\n        }\n\n        var markers = L.geoJson(wine_geo, {\n            pointToLayer: defineFeature,\n            // onEachFeature: defineFeaturePopup\n        })\n\n        markerclusters.addLayer(markers)\n        // const markercluster = L.markerClusterGroup()\n        // markercluster.addLayer(markers).addTo(pieMapLayerGroup)\n\n\n        // legend.addTo(mymap);\n        // L.control.layers({'Choropleth Map': choroLayerGroup, 'Pie Map': pieMapLayerGroup}).addTo(mymap)\n\n        geojson.beforeAdd = map => {\n            legend.addTo(map);\n        }\n\n        markerclusters.beforeAdd = map => {\n            map.removeControl(legend)\n        }\n\n        mymap.on('zoomend', (map) => {\n            const zoomLevel = mymap.getZoom()\n            console.log(zoomLevel)\n            if (zoomLevel < 6) {\n                if (mymap.hasLayer(markerclusters)) {\n                    mymap.removeLayer(markerclusters)\n                    geojson.addTo(mymap)\n                }\n            }\n            if (zoomLevel >= 6) {\n                if (mymap.hasLayer(geojson)) {\n                    mymap.removeLayer(geojson)\n                    markerclusters.addTo(mymap)\n                }\n            }\n        })\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div id=\"mapid\"/>\n                <FullScreenDialog open={this.state.showDialog} closeDialog={this.closeDialog}\n                                  openDialog={this.openDialog} activeData={this.state.activeData}\n                                  properties={this.state.properties} priceData={this.state.priceData}/>\n            </div>\n\n        )\n\n    }\n}\n","export default __webpack_public_path__ + \"static/media/sliced.11795653.csv\";","import React from \"react\";\nimport * as d3 from 'd3';\nimport {RadarChart} from \"./RadarChart\"\nimport originData from '../../data/sliced.csv'\nimport '../../css/radarChart.css'\n\nvar type_id = 1\nvar type_data = {\n    1: ['Cabernet Sauvignon',\n        'Pinot Noir',\n        'Syrah',\n        'Malbec',\n        'Côte de Nuits Red',\n        'Shiraz',\n        'Merlot',\n        'Côte de Beaune Red',],\n    2: ['Chardonnay',\n        'Riesling',\n        'Sauvignon Blanc',\n        'Chablis',\n        'Chenin Blanc',\n        'Côte de Beaune White',\n        'Macônnais White',\n        'Pinot Grigio'],\n    3: ['Champagne', 'Prosecco', 'Cava', 'Cremant'],\n    4: ['Rosé', 'Pinot Grigio', 'Pinot Noir'],\n    5: ['Sherry', 'Madeira', 'Pedro Ximenez'],\n}\n\n\nvar margin = {top: 50, right: 25, bottom: 50, left: 25},\n    width = Math.min(700, window.innerWidth * 0.8 / 4 - 10) - margin.left - margin.right,\n    height = Math.min(width, window.innerHeight * 0.8 - margin.top - margin.bottom - 20);\n\nvar labels = ['rating', 'price', 'tannin', 'sweetness', 'intensity', 'acidity', 'fizziness']\nvar type_labels = {\n    1: ['rating', 'price', 'sweetness', 'intensity', 'tannin', 'acidity'],\n    2: ['rating', 'price', 'sweetness', 'intensity', 'acidity'],\n    3: ['rating', 'price', 'fizziness', 'intensity', 'acidity'],\n    4: ['rating', 'price', 'sweetness', 'intensity', 'acidity'],\n    5: ['rating', 'price', 'sweetness', 'intensity', 'acidity'],\n}\nvar color = {\n    1: d3.scaleOrdinal().range(['rgba(177,18,38,0.73)']),\n    2: d3.scaleOrdinal().range(['#e4b953']),\n    3: d3.scaleOrdinal().range(['#898ebe']),\n    4: d3.scaleOrdinal().range(['#CC337F']),\n    5: d3.scaleOrdinal().range(['#722f37']),\n}\nvar radarDescMap = { 1:{\n    'Cabernet Sauvignon':\n    'Form a full-bodied, complex, fruit forward and dry wine when vinified correctly',\n\n    'Pinot Noir':\n    'World\\'s most popular light-bodied red wine, it’s loved for its red fruit aromas that are accentuated by a long, smooth finish',\n\n    'Syrah':\n    'Darkest full-bodied red wines in the world with dark fruit flavors from sweet blueberry to savory black olive',\n\n    'Malbec':\n    'Known for its plump, dark fruit flavors and smoky finish that offers a great alternative to higher priced',\n\n    'Côte de Nuits Red':\n    'The sturdiest wines with most depth of flavour come from the steeper slopes',\n\n    'Shiraz':\n    'Shiraz wines are well known for their rich and juicy mid-palate. You can expect to taste flavours of pepper, spice and sweet red fruit.',\n\n    'Côte de Beaune Red':\n    'Produced in the southern half of the escarpment of the Côte d\\'Or, named after the important town and wine centre of Beaune',\n\n    'Merlot':\n    'A varietal that sits smack dab in the middle of the red wine spectrum, with easy-drinking tannins and super-soft finish',},\n\n    2: {\n    'Chardonnay':\n    'The most compelling white wine in the world as “the red wine of whites”, for the reasons of barrel fermentation and malolactic',\n\n    'Riesling':\n    'This aromatic wine offers primary fruit aromas of orchard fruits like nectarine and apricot, with a taste of high acidity, that similar to the levels in lemonade',\n\n    'Sauvignon Blanc':\n    'A popular and unmistakable white wine that\\'s loved for its “green” herbal flavors and racy acidity',\n\n    'Chablis':\n    'Produced in the northernmost district of the Burgundy region in France, where the cool climate produces wines with more acidity and flavors less fruity',\n\n    'Chenin Blanc':\n    'A very adaptable light-bodied white wine which is made in range of styles from dry to sweet',\n\n    'Côte de Beaune White':\n    'A wine that is firm without severity, flavorful and captivating, with everything that it should have: vivacity, brilliance, and intense gold colour',\n\n    'Macônnais White':\n    'Best known as a source of good value white wines made from the Chardonnay grape, with the colour of white or yellow gold or strawcoloured with gently glowing silvery',\n\n    'Pinot Grigio':\n    'A zesty white wine that is as refreshing as a cold glass of lemonade on a hot summer\\'s day, as the second most popular white wine in America',},\n\n    3: {\n    'Champagne':\n    'Subtly aromatic that the effervescence may mask their delicate bouquet',\n\n    'Prosecco':\n    'Produced by Glera grapes using an affordable method called the “Tank Method. It’s apt for celebration parties and inaugural events',\n\n    'Cava':\n    'A wine with significant levels of carbon dioxide in it that make it fizzy. It have unique flavors of lemon, quince, pear',\n\n    'Cremant':\n    'A group of sparkling wines that will satisfy your desire for high quality bubbly',\n    },\n\n    4: {\n    'Rosé':\n    'Resembles the flavor profile of a light red wine, but with brighter and crisper tasting notes, with a pleasant crunchy green flavor on the finish',\n\n    'Pinot Grigio':\n    'Uses the pale purple skins of the grape to stain the wine a pale copper hue. Floral and fruit aromas of violets and roses with berries and black currant',\n\n    'Pinot Noir':\n    'A delicate and crisp rosé with notes of apple, strawberry, and melon',\n    },\n\n    5: {\n    'Sherry':\n    'Produced in Spain\\'s sherry triangle, can be dry (Vinos Generosos), naturally sweet (Vinos Dulces Naturales) or sweetened through blending (Vinos Generosos de Licor)',\n\n    'Madeira':\n    'Often served as an aperitif or dessert wine and used in cooking, especially for making sauces. Dry Madeira pairs nicely with creamy soups',\n\n    'Pedro Ximenez':\n    'Probably the sweetest wine in the world. Its complexity of aroma and flavor make it fresh and harmonious on the palate as a result of the natural process of drying the grapes in the sun',\n    }\n}\n\n\n\nconst type_map = {\"Red\": 1, \"White\": 2, \"Sparkling\": 3, \"Rose\": 4, \"Fortified\": 5, \"Dessert\": 6}\n\nvar radarChartOptions = {\n    w: width,\n    h: height,\n    margin: margin,\n    maxValue: 0.5,\n    levels: 1,\n    roundStrokes: true,\n    color: color,\n    labels: labels\n};\n\n\nexport default class StyleRadar extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n\n    componentDidMount() {\n        d3.csv(originData)\n            .then((dataset) => {\n\n                const sum = (a, b) => a + b\n\n\n                // build scales\n                let parseF = str => (str ? parseFloat(str) : 0)\n                let parseS = str => (str ? str : 'Unknown')\n                let range = [0.03, 0.001]\n                let scales = {}\n                labels.map(l => {\n                    let sorted = dataset.map(d => d[l])\n                        .filter(v => v)\n                        .sort((a, b) => a - b)\n\n                    let lrange = l == 'rating' || l == 'price' ? range[1] : range[0]\n\n                    scales[l] = d3.scaleLinear()\n                        .domain([d3.min(dataset, (d) => parseF(sorted[Math.floor(sorted.length * lrange)])),\n                            d3.max(dataset, (d) => parseF(sorted[Math.floor(sorted.length * (1 - lrange))]))])\n                        .range([0.1, 1])\n                })\n\n\n                // function to get data & draw chart\n                const key_filter = (key, chart_id) => {\n                    console.log(key, chart_id)\n                    let count = key => dataset.filter(d => d.style_varietal_name === key).length\n                    d3.select('#count').text(`Count: ${count(key)}`)\n\n                    let new_data = []\n                    let tlabels = type_labels[type_id]\n                    const valid = d => (tlabels.map(l => (d[l] ? 1 : 0)).reduce(sum, 0) >= tlabels.length)\n                    let filtered = dataset\n                        .filter(d => valid(d))\n                        .filter(d => d['style_varietal_name'] == key)\n                    filtered = d3.shuffle(filtered)\n\t\t\t\t\t\t.filter((d,i) => i < 400)\n\n                    filtered.forEach((d, i) => {\n                        new_data.push(tlabels.map(l => {\n                            let lowbound = 0, upbound = 1.1\n                            let value = scales[l](parseF(d[l]))\n                            value = Math.min(Math.max(value, lowbound), upbound)\n                            return {axis: l, value: value, actValue: parseS(d[l])}\n                        }))\n                    })\n                    radarChartOptions.labels = tlabels\n                    radarChartOptions.color = color[type_id]\n                    RadarChart(`#${chart_id}`, new_data, radarChartOptions);\n                }\n\n\n                // tap header click event\n                d3.selectAll('.tablink').on('click', function (e) {\n                    let type_name = e.toElement.name\n                    type_id = type_map[type_name]\n                    d3.selectAll(\".tabcontent\").style(\"display\", \"none\")\n                    d3.selectAll(\".tablink\").style('background-color', '')\n\n                    let block = d3.select(`#${type_name}`).style(\"display\", \"grid\")\n\n                    // build contents\n                    block.selectAll('.grid-item').remove()\n                    const items = block.selectAll('.grid-item')\n                        .data(type_data[type_id])\n                        .enter()\n                        .append('div')\n                        .attr('class', 'grid-item')\n\n                    items.append('div')\n                        .attr('class', 'radar-chart')\n                        .attr('id', (d, i) => `${type_name}${i}`)\n                        .each((d, i) => {\n                            key_filter(d, `${type_name}${i}`)\n                        })\n                    e.toElement.style.backgroundColor = '#d62728';\n\n\t\t\t\t\titems.append('h2')\n\t\t\t\t\t\t.attr('class', 'radarTitle')\n\t\t\t\t\t\t.text(d => d)\n\n\t\t\t\t\titems.append('p')\n\t\t\t\t\t\t.attr('class', 'radarDesc')\n\t\t\t\t\t\t.text(d => radarDescMap[type_id][d])\n                })\n\n                document.getElementsByName(\"Red\")[0].click();\n\n            })\n    }\n\n    render() {\n        return (\n            <div id=\"radarContainer\">\n                <button className=\"tablink\" name=\"Red\">Red Wine</button>\n                <button className=\"tablink\" name=\"White\">White Wine</button>\n                <button className=\"tablink\" name=\"Sparkling\">Sparkling</button>\n                <button className=\"tablink\" name=\"Rose\">Rose</button>\n                <button className=\"tablink\" name=\"Fortified\">Fortified</button>\n\n\n                <div id=\"Red\" className=\"tabcontent grid-container\">\n                </div>\n\n                <div id=\"White\" className=\"tabcontent grid-container\">\n                </div>\n\n                <div id=\"Sparkling\" className=\"tabcontent grid-container\">\n                </div>\n\n                <div id=\"Rose\" className=\"tabcontent grid-container\">\n                </div>\n\n                <div id=\"Fortified\" className=\"tabcontent grid-container\">\n                </div>\n            </div>\n\n        )\n\n    }\n}\n","/////////////////////////////////////////////////////////\n/////////////// The Radar Chart Function ////////////////\n/////////////// Written by Nadieh Bremer ////////////////\n////////////////// VisualCinnamon.com ///////////////////\n/////////// Inspired by the code of alangrafu ///////////\n/////////////////////////////////////////////////////////\nimport * as d3 from 'd3';\n\nexport function RadarChart(id, data, options) {\n    var cfg = {\n        w: 100,\t\t\t\t//Width of the circle\n        h: 100,\t\t\t\t//Height of the circle\n        margin: {top: 20, right: 20, bottom: 20, left: 20}, //The margins of the SVG\n        levels: 3,\t\t\t\t//How many levels or inner circles should there be drawn\n        maxValue: 0, \t\t\t//What is the value that the biggest circle will represent\n        labelFactor: 1.25, \t//How much farther than the radius of the outer circle should the labels be placed\n        wrapWidth: 60, \t\t//The number of pixels after which a label needs to be given a new line\n        opacityArea: 0.01, \t//The opacity of the area of the blob\n        dotRadius: 4, \t\t\t//The size of the colored circles of each blog\n        opacityCircles: 0.1, \t//The opacity of the circles of each blob\n        strokeWidth: 2, \t\t//The width of the stroke around each blob\n        roundStrokes: false,\t//If true the area and stroke will follow a round path (cardinal-closed)\n        color: d3.schemeCategory10\t//Color function\n    };\n\n    //Put all of the options into a variable called cfg\n    if ('undefined' !== typeof options) {\n        for (var i in options) {\n            if ('undefined' !== typeof options[i]) {\n                cfg[i] = options[i];\n            }\n        }//for i\n    }//if\n\n    //If the supplied maxValue is smaller than the actual one, replace by the max in the data\n    // var maxValue = Math.max(cfg.maxValue, d3.max(data, function(i){return d3.max(i.map(function(o){return o.value;}))}));\n    var maxValue = 1\n\n    var allAxis = cfg.labels, // (data[0].map(function(i, j){return i.axis})),\t//Names of each axis\n        total = allAxis.length,\t\t\t\t\t//The number of different axes\n        radius = Math.min(cfg.w / 2, cfg.h / 2), \t//Radius of the outermost circle\n        Format = d3.format('%'),\t\t\t \t//Percentage formatting\n        angleSlice = Math.PI * 2 / total;\t\t//The width in radians of each \"slice\"\n\n    //Scale for the radius\n    var rScale = d3.scaleLinear()\n        .range([0, radius])\n        .domain([0, maxValue]);\n\n    /////////////////////////////////////////////////////////\n    //////////// Create the container SVG and g /////////////\n    /////////////////////////////////////////////////////////\n\n    //Remove whatever chart with the same id/class was present before\n    d3.select(id).select(\"svg\").remove();\n\n    //Initiate the radar chart SVG\n    var svg = d3.select(id).append(\"svg\")\n        .attr(\"width\", cfg.w + cfg.margin.left + cfg.margin.right)\n        .attr(\"height\", cfg.h + cfg.margin.top + cfg.margin.bottom)\n        .attr(\"class\", \"radar\" + id);\n    //Append a g element\n    var g = svg.append(\"g\")\n        .attr(\"transform\", \"translate(\" + (cfg.w / 2 + cfg.margin.left) + \",\" + (cfg.h / 2 + cfg.margin.top) + \")\");\n\n    /////////////////////////////////////////////////////////\n    ////////// Glow filter for some extra pizzazz ///////////\n    /////////////////////////////////////////////////////////\n\n    //Filter for the outside glow\n    var defs = g.append('defs')\n    var filter = defs.append('filter').attr('id', 'glow'),\n        feGaussianBlur = filter.append('feGaussianBlur').attr('stdDeviation', '2.5').attr('result', 'coloredBlur'),\n        feMerge = filter.append('feMerge'),\n        feMergeNode_1 = feMerge.append('feMergeNode').attr('in', 'coloredBlur'),\n        feMergeNode_2 = feMerge.append('feMergeNode').attr('in', 'SourceGraphic');\n\n    /////////////////////////////////////////////////////////\n    /////////////// Draw the Circular grid //////////////////\n    /////////////////////////////////////////////////////////\n\n    //Wrapper for the grid & axes\n    var axisGrid = g.append(\"g\").attr(\"class\", \"axisWrapper\");\n\n    //Draw the background circles\n    axisGrid.selectAll(\".levels\")\n        .data(d3.range(1, (cfg.levels + 1)).reverse())\n        .enter()\n        .append(\"circle\")\n        .attr(\"class\", \"gridCircle\")\n        .attr(\"r\", function (d, i) {\n            return radius / cfg.levels * d;\n        })\n        .style(\"fill\", \"#CDCDCD\")\n        .style(\"stroke\", \"#CDCDCD\")\n        .style(\"fill-opacity\", cfg.opacityCircles)\n\n    // return ;\n\n    /////////////////////////////////////////////////////////\n    //////////////////// Draw the axes //////////////////////\n    /////////////////////////////////////////////////////////\n\n    //Create the straight lines radiating outward from the center\n    var axis = axisGrid.selectAll(\".axis\")\n        .data(allAxis)\n        .enter()\n        .append(\"g\")\n        .attr(\"class\", \"axis\");\n    //Append the lines\n    var axis_len = 0.1\n    axis.append(\"line\")\n        .attr(\"x1\", function (d, i) {\n            return radius * Math.cos(angleSlice * i - Math.PI / 2);\n        })\n        .attr(\"y1\", function (d, i) {\n            return radius * Math.sin(angleSlice * i - Math.PI / 2);\n        })\n        .attr(\"x2\", function (d, i) {\n            return radius * Math.cos(angleSlice * i - Math.PI / 2);\n        })\n        .attr(\"y2\", function (d, i) {\n            return radius * Math.sin(angleSlice * i - Math.PI / 2);\n        })\n        .attr(\"class\", \"line\")\n        .style(\"stroke\", \"#CDCDCD\")\n        .style(\"stroke-width\", \"2px\")\n        .attr(\"x1\", 0)\n        .attr(\"y1\", 0)\n        .style(\"stroke\", \"white\")\n\n\n    //Creates a function that makes SVG paths in the shape of arcs with the specified inner and outer radius\n    var arc = d3.arc()\n        .innerRadius(radius)\n        .outerRadius(radius);\n\n    //Creates function that will turn the month data into start and end angles\n    var pie\n    pie = d3.pie()\n        .value(function (d) {\n            return 1;\n        })\n        .padAngle(.01)\n        .sort(null);\n\n    //Draw the arcs themselves\n    g.selectAll(\".arc\")\n        .data(pie(allAxis))\n        .enter().append(\"path\")\n        .attr(\"class\", \"arc\")\n        .attr(\"id\", function (d, i) {\n            return `arc${id}${i}`;\n        })\n        .attr(\"d\", arc)\n        .style(\"stroke-width\", \"0px\")\n        .style('fill', 'none')\n\n\n    //Append the labels at each axis\n    axis.append(\"text\")\n        .attr(\"class\", \"labelText\")\n        .attr(\"dy\", \"-5\")\n        .append(\"textPath\")\n        .attr(\"xlink:href\", function (d, i) {\n            return `#arc${id}${i}`;\n        })\n        .text(function (d) {\n            return d;\n        })\n\n\n    if (data.length == 0) {\n        return;\n    }\n\n    /////////////////////////////////////////////////////////\n    ///////////// Draw the radar chart blobs ////////////////\n    /////////////////////////////////////////////////////////\n\n    //The radial line function\n    var radarLine = d3.radialLine()\n        .curve(d3.curveLinearClosed)\n        .radius(d => rScale(d.value))\n        .angle((d, i) => i * angleSlice);\n\n    if (cfg.roundStrokes) {\n        radarLine.curve(d3.curveCardinalClosed)\n    }\n\n    //Create a wrapper for the blobs\n    var blobWrapper = g.selectAll(\".radarWrapper\")\n        .data(data)\n        .enter().append(\"g\")\n        .attr(\"class\", \"radarWrapper\");\n\n    //Append the backgrounds\n    blobWrapper\n        .append(\"path\")\n        .attr(\"class\", \"radarArea\")\n        .attr(\"d\", function (d, i) {\n            return radarLine(d);\n        })\n        .style(\"fill\", function (d, i) {\n            return cfg.color(i);\n        })\n        .style(\"fill-opacity\", cfg.opacityArea)\n\n\n    //Create the outlines\n    blobWrapper.append(\"path\")\n        .attr(\"class\", \"radarStroke\")\n        .attr(\"d\", function (d, i) {\n            return radarLine(d);\n        })\n        // .style(\"stroke-width\", cfg.strokeWidth + \"px\")\n        // .style(\"stroke\", function(d,i) { return cfg.color(i); })\n        .style(\"fill\", \"none\")\n    // .style(\"filter\" , \"url(#glow)\");\n\n\n    //Set up the small tooltip for when you hover over a circle\n    var tooltip = g.append(\"text\")\n        .attr(\"class\", \"tooltip\")\n        .style(\"opacity\", 0);\n\n\n}//RadarChart\n","export default __webpack_public_path__ + \"static/media/wine_name_grapes.8bdee9b9.csv\";","export default __webpack_public_path__ + \"static/media/tree.763d8211.csv\";","export default __webpack_public_path__ + \"static/media/wine_radar.a149a998.csv\";","/////////////////////////////////////////////////////////\n/////////////// The Radar Chart Function ////////////////\n/////////////// Written by Nadieh Bremer ////////////////\n////////////////// VisualCinnamon.com ///////////////////\n/////////// Inspired by the code of alangrafu ///////////\n/////////////////////////////////////////////////////////\nimport * as d3 from \"d3\"\n\nexport function CompareRadar(id, data, options, new_data) {\n    var cfg = {\n        w: 600,\t\t\t\t//Width of the circle\n        h: 600,\t\t\t\t//Height of the circle\n        margin: {top: 20, right: 20, bottom: 20, left: 20}, //The margins of the SVG\n        levels: 3,\t\t\t\t//How many levels or inner circles should there be drawn\n        maxValue: 0, \t\t\t//What is the value that the biggest circle will represent\n        labelFactor: 1.25, \t//How much farther than the radius of the outer circle should the labels be placed\n        wrapWidth: 60, \t\t//The number of pixels after which a label needs to be given a new line\n        opacityArea: 0.35, \t//The opacity of the area of the blob\n        dotRadius: 4, \t\t\t//The size of the colored circles of each blog\n        opacityCircles: 0.1, \t//The opacity of the circles of each blob\n        strokeWidth: 2, \t\t//The width of the stroke around each blob\n        roundStrokes: false,\t//If true the area and stroke will follow a round path (cardinal-closed)\n        color: d3.schemeCategory10\t//Color function\n    };\n\n    //Put all of the options into a variable called cfg\n    if('undefined' !== typeof options){\n        for(var i in options){\n            if('undefined' !== typeof options[i]){ cfg[i] = options[i]; }\n        }//for i\n    }//if\n\n    //If the supplied maxValue is smaller than the actual one, replace by the max in the data\n    // var maxValue = Math.max(cfg.maxValue, d3.max(data, function(i){return d3.max(i.map(function(o){return o.value;}))}));\n    var maxValue = 1\n\n    var allAxis = cfg.labels, // (data[0].map(function(i, j){return i.axis})),\t//Names of each axis\n        total = allAxis.length,\t\t\t\t\t//The number of different axes\n        radius = Math.min(cfg.w/2, cfg.h/2), \t//Radius of the outermost circle\n        Format = d3.format('%'),\t\t\t \t//Percentage formatting\n        angleSlice = Math.PI * 2 / total;\t\t//The width in radians of each \"slice\"\n\n    //Scale for the radius\n    var rScale = d3.scaleLinear()\n        .range([0, radius])\n        .domain([0, maxValue]);\n\n    /////////////////////////////////////////////////////////\n    //////////// Create the container SVG and g /////////////\n    /////////////////////////////////////////////////////////\n\n    //Remove whatever chart with the same id/class was present before\n    d3.select(id).select(\"svg\").remove();\n\n    //Initiate the radar chart SVG\n    var svg = d3.select(id).append(\"svg\")\n        .attr(\"width\",  cfg.w + cfg.margin.left + cfg.margin.right)\n        .attr(\"height\", cfg.h + cfg.margin.top + cfg.margin.bottom)\n        .attr(\"class\", \"radar\"+id);\n    //Append a g element\n    var g = svg.append(\"g\")\n        .attr(\"transform\", \"translate(\" + (cfg.w/2 + cfg.margin.left) + \",\" + (cfg.h/2 + cfg.margin.top) + \")\");\n\n    /////////////////////////////////////////////////////////\n    ////////// Glow filter for some extra pizzazz ///////////\n    /////////////////////////////////////////////////////////\n\n    //Filter for the outside glow\n    var defs = g.append('defs')\n    var filter = defs.append('filter').attr('id','glow'),\n        feGaussianBlur = filter.append('feGaussianBlur').attr('stdDeviation','2.5').attr('result','coloredBlur'),\n        feMerge = filter.append('feMerge'),\n        feMergeNode_1 = feMerge.append('feMergeNode').attr('in','coloredBlur'),\n        feMergeNode_2 = feMerge.append('feMergeNode').attr('in','SourceGraphic');\n\n    /////////////////////////////////////////////////////////\n    /////////////// Draw the Circular grid //////////////////\n    /////////////////////////////////////////////////////////\n\n    //Wrapper for the grid & axes\n    var axisGrid = g.append(\"g\").attr(\"class\", \"axisWrapper\");\n\n    //Draw the background circles\n    axisGrid.selectAll(\".levels\")\n        .data(d3.range(1,(cfg.levels+1)).reverse())\n        .enter()\n        .append(\"circle\")\n        .attr(\"class\", \"gridCircle\")\n        .attr(\"r\", function(d, i){return radius/cfg.levels*d;})\n        .style(\"fill\", \"#CDCDCD\")\n        .style(\"stroke\", \"#CDCDCD\")\n        .style(\"fill-opacity\", cfg.opacityCircles)\n        .style(\"filter\" , \"url(#glow)\");\n\n    /////////////////////////////////////////////////////////\n    //////////////////// Draw the axes //////////////////////\n    /////////////////////////////////////////////////////////\n\n    //Create the straight lines radiating outward from the center\n    var axis = axisGrid.selectAll(\".axis\")\n        .data(allAxis)\n        .enter()\n        .append(\"g\")\n        .attr(\"class\", \"axis\");\n    //Append the lines\n    var axis_len = 0.1\n    axis.append(\"line\")\n        .attr(\"x1\", function(d, i){ return rScale(maxValue*(1-axis_len/2)) * Math.cos(angleSlice*i - Math.PI/2); })\n        .attr(\"y1\", function(d, i){ return rScale(maxValue*(1-axis_len/2)) * Math.sin(angleSlice*i - Math.PI/2); })\n        .attr(\"x2\", function(d, i){ return rScale(maxValue*(1+axis_len/2)) * Math.cos(angleSlice*i - Math.PI/2); })\n        .attr(\"y2\", function(d, i){ return rScale(maxValue*(1+axis_len/2)) * Math.sin(angleSlice*i - Math.PI/2); })\n        .attr(\"class\", \"line\")\n        .style(\"stroke\", \"#CDCDCD\")\n        .style(\"stroke-width\", \"2px\")\n        .attr(\"x1\", 0)\n        .attr(\"y1\", 0)\n        .style(\"stroke\", \"white\")\n\n\n\n    //Append the labels at each axis\n    axis.append(\"text\")\n        .attr(\"class\", \"legend\")\n        .style(\"font-size\", \"11px\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"dy\", \"0.35em\")\n        .attr(\"x\", function(d, i){ return rScale(maxValue * cfg.labelFactor) * Math.cos(angleSlice*i - Math.PI/2); })\n        .attr(\"y\", function(d, i){ return rScale(maxValue * cfg.labelFactor) * Math.sin(angleSlice*i - Math.PI/2); })\n        .text(function(d){return d})\n        .call(wrap, cfg.wrapWidth);\n\n    if (data.length == 0) {\n        return ;\n    }\n\n    /////////////////////////////////////////////////////////\n    ///////////// Draw the radar chart blobs ////////////////\n    /////////////////////////////////////////////////////////\n\n    //The radial line function\n    var radarLine = d3.radialLine()\n        .curve(d3.curveLinearClosed)\n        .radius(d => rScale(d.value))\n        .angle((d,i) => i * angleSlice);\n\n    if(cfg.roundStrokes) {\n        radarLine.curve(d3.curveCardinalClosed)\n    }\n\n    // data = data.map((d,i) => Object.assign({i:i}, d))\n    // console.log(data)\n\n    //Create a wrapper for the blobs\n    var blobWrapper = g.selectAll(\".radarWrapper\")\n        .data(data)\n        .enter().append(\"g\")\n        .attr(\"class\", \"radarWrapper\");\n\n    //Append the backgrounds\n    blobWrapper\n        .append(\"path\")\n        .attr(\"class\", \"radarArea\")\n        .attr(\"d\", function(d,i) { return radarLine(d); })\n        .style(\"fill\", function(d,i) { return cfg.color(i); })\n        .style(\"fill-opacity\", cfg.opacityArea)\n        .on('mouseover', function (d,i){\n            //Dim all blobs\n            d3.selectAll(\".radarArea\")\n                .transition().duration(200)\n                .style(\"fill-opacity\", 0.1);\n            //Bring back the hovered over blob\n            d3.select(this)\n                .transition().duration(200)\n                .style(\"fill-opacity\", 0.7);\n        })\n        .on('mouseout', function(){\n            //Bring back all blobs\n            d3.selectAll(\".radarArea\")\n                .transition().duration(200)\n                .style(\"fill-opacity\", cfg.opacityArea);\n        })\n        .on(\"contextmenu\", function(e,d) {\n            e.preventDefault();\n            new_data.splice(new_data.findIndex(_d => _d === d), 1)\n            CompareRadar(\".compareRadar\", new_data, options, new_data)\n        })\n        .attr(\"mask\", (d, i) => {\n            return `url(#mask${i})`;\n        })\n\n    //Create the outlines\n    blobWrapper.append(\"path\")\n        .attr(\"class\", \"radarStroke\")\n        .attr(\"d\", function(d,i) { return radarLine(d); })\n        // .style(\"stroke-width\", cfg.strokeWidth + \"px\")\n        // .style(\"stroke\", function(d,i) { return cfg.color(i); })\n        .style(\"fill\", \"none\")\n    // .style(\"filter\" , \"url(#glow)\");\n\n    //Append the circles\n    blobWrapper.selectAll(\".radarCircle\")\n        .data(function(d,i) { return d.map(d => [d, i]); })\n        .enter().append(\"circle\")\n        .attr(\"class\", \"radarCircle\")\n        .attr(\"r\", cfg.dotRadius)\n        .attr(\"cx\", function(d,i){ return rScale(d[0].value) * Math.cos(angleSlice*i - Math.PI/2); })\n        .attr(\"cy\", function(d,i){ return rScale(d[0].value) * Math.sin(angleSlice*i - Math.PI/2); })\n        .style(\"fill\", function(d,i) { return cfg.color(d[1]); })\n        // .style(\"fill-opacity\", cfg.opacityArea);\n        .style(\"fill-opacity\", 1);\n\n\n\n\n\n\n\n    /////////////////////////////////////////////////////////\n    //////// Append invisible circles for tooltip ///////////\n    /////////////////////////////////////////////////////////\n\n    //Wrapper for the invisible circles on top\n    var blobCircleWrapper = g.selectAll(\".radarCircleWrapper\")\n        .data(data)\n        .enter().append(\"g\")\n        .attr(\"class\", \"radarCircleWrapper\");\n\n    //Append a set of invisible circles on top for the mouseover pop-up\n    blobCircleWrapper.selectAll(\".radarInvisibleCircle\")\n        .data(function(d,i) { return d; })\n        .enter().append(\"circle\")\n    // .attr(\"class\", \"radarArea\")\n        .attr(\"class\", \"radarInvisibleCircle\")\n        .attr(\"r\", cfg.dotRadius*1.5)\n        .attr(\"cx\", function(d,i){ return rScale(d.value) * Math.cos(angleSlice*i - Math.PI/2); })\n        .attr(\"cy\", function(d,i){ return rScale(d.value) * Math.sin(angleSlice*i - Math.PI/2); })\n        .style(\"fill\", \"none\")\n        .style(\"pointer-events\", \"all\")\n        .on(\"mouseover\", function(e,d) {\n            const newX =  parseFloat(d3.select(this).attr('cx')) - 10;\n            const newY =  parseFloat(d3.select(this).attr('cy')) - 10;\n\n            tooltip\n                .attr('x', newX)\n                .attr('y', newY)\n                .text(d.axis + ':' + String(d.actValue))\n                .transition().duration(200)\n                .style('opacity', 1);\n        })\n        .on(\"mouseout\", function(){\n            tooltip.transition().duration(200)\n                .style(\"opacity\", 0);\n        })\n\n\n    data.forEach(function(d, i){\n        const mask = defs.append(\"mask\")\n            .attr(\"id\", `mask${i}`);\n\n        mask.append(\"path\")\n        // .attr(\"class\", \"radarArea\")\n            .attr(\"d\", radarLine(d))\n            .style(\"fill\", 'white')\n\n        d.forEach((d,i) => {\n            mask.append(\"circle\")\n                .attr(\"r\", cfg.dotRadius*1.5-2)\n                .attr(\"cx\", rScale(d.value) * Math.cos(angleSlice*i - Math.PI/2))\n                .attr(\"cy\", rScale(d.value) * Math.sin(angleSlice*i - Math.PI/2))\n                .attr(\"fill\", 'black')\n        })\n    })\n\n\n    //Set up the small tooltip for when you hover over a circle\n    var tooltip = g.append(\"text\")\n        .attr(\"class\", \"tooltip\")\n        .style(\"opacity\", 0);\n\n    /////////////////////////////////////////////////////////\n    /////////////////// Helper Function /////////////////////\n    /////////////////////////////////////////////////////////\n\n    //Taken from http://bl.ocks.org/mbostock/7555321\n    //Wraps SVG text\n    function wrap(text, width) {\n        text.each(function() {\n            var text = d3.select(this),\n                words = text.text().split(/\\s+/).reverse(),\n                word,\n                line = [],\n                lineNumber = 0,\n                lineHeight = 1.4, // ems\n                y = text.attr(\"y\"),\n                x = text.attr(\"x\"),\n                dy = parseFloat(text.attr(\"dy\")),\n                tspan = text.text(null).append(\"tspan\").attr(\"x\", x).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n\n            while (word = words.pop()) {\n                line.push(word);\n                tspan.text(line.join(\" \"));\n                if (tspan.node().getComputedTextLength() > width) {\n                    line.pop();\n                    tspan.text(line.join(\" \"));\n                    line = [word];\n                    tspan = text.append(\"tspan\").attr(\"x\", x).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n                }\n            }\n        });\n    }//wrap\n\n}\n","import * as d3 from 'd3'\r\nimport '../../css/tree.css'\r\nimport { CompareRadar } from './comparisonRadar.js'\r\n\r\nexport default function drawRadialChart(id, csvpath, radar_csv, text){\r\n    d3.csv(csvpath).then((Treedata) => {\r\n        d3.csv(radar_csv).then((dataset) => {\r\n\r\n    var DURATION = 100; // d3 animation duration\r\n    var STAGGERN = 4; // delay for each node\r\n    var STAGGERD = 200; // delay for each depth\r\n    var NODE_DIAMETER = 4; // diameter of circular nodes\r\n    var MIN_ZOOM = 0.5; // minimum zoom allowed\r\n    var MAX_ZOOM = 10;  // maximum zoom allowed\r\n    var HAS_CHILDREN_COLOR = 'lightsteelblue';\r\n    var SELECTED_COLOR = '#a00';  // color of selected node\r\n    var ZOOM_INC = 0.04;  // zoom factor per animation frame\r\n    var PAN_INC = 3;  //  pan per animation frame\r\n    var ROT_INC = 0.3;  // rotation per animation frame\r\n\r\n    var counter = 0;  // node ids\r\n    var curNode;  // currently selected node\r\n    var curPath;  // array of nodes in the path to the currently selected node\r\n    var flag = 0;\r\n    // size of the diagram\r\n    var width = 470;\r\n    var height = 470;\r\n\r\n    // current pan, zoom, and rotation\r\n    var curX = width / 2;\r\n    var curY = height / 2;\r\n    var curZ = 1.0; // current zoom\r\n    var curR = 270; // current rotation\r\n\r\n// d3 diagonal projection for use by the node paths\r\n    // var diagonal= d3.svg.diagonal.radial()\r\n    //   .projection(function(d) {\r\n    //       return [d.y, d.x / 180 * Math.PI];\r\n    //   });\r\n\r\n    function project(x, y) {\r\n      // return [y, x / 180 * Math.PI];\r\n      var angle = (x - 90) / 180 * Math.PI, radius = y;\r\n      return [radius * Math.cos(angle), radius * Math.sin(angle)];\r\n    }\r\n\r\n    // d3 tree layout\r\n    var tree = d3.tree()\r\n      // .nodeSize([4.5, 120])\r\n      .size([360, Math.min(width, height) / 2 - 130])\r\n      .separation(function(a, b) {\r\n        return a.depth === 0 ? 1 : (a.parent === b.parent ? 1 : 2) / a.depth;\r\n    });\r\n\r\n    // define the svgBase, attaching a class for styling and the zoomListener\r\n    d3.select(id).select(\"svg\").remove();\r\n    var svgBase = d3.select('.drawRadialChart').append('svg')\r\n      .attr('width', width)\r\n      .attr('height', height)\r\n      // .on('mousedown', mousedown);\r\n\r\n    // Group which holds all nodes and manages pan, zoom, rotate\r\n    var svgGroup = svgBase.append('g')\r\n      .attr('transform', 'translate(' + curX + ',' + curY + ')');\r\n\r\n    d3.select('#selection').on('mousedown', switchroot);\r\n\r\n    // Define the data root\r\n    var stratify = d3.stratify()\r\n      .parentId(function(d) { return d.id.substring(0, d.id.lastIndexOf(\"\\\\\")); });\r\n\r\n    var root = stratify(Treedata)\r\n    // console.log(root)\r\n\r\n    // var root = d3.hierarchy(Treedata);\r\n    root.x0 = curY;\r\n    root.y0 = 0;\r\n    selectNode(root); // current selected node\r\n\r\n    // Collapse all children of root's children before rendering\r\n    // var text = \"South African Syrah\"\r\n    var source = root;\r\n    for(var i=0;i<6;i++){\r\n          for(var c in root.children[i].children){\r\n             var children_id = root.children[i].children[c].id\r\n             if(children_id.substring(children_id.lastIndexOf(\"\\\\\") + 1) == text){\r\n               source = root.children[i].children[c]\r\n               break\r\n             }\r\n          }\r\n    }\r\n\r\n    update(source);\r\n    update(source);\r\n    // switchroot(source);\r\n    // update(root); // Layout the tree initially and center on the root node\r\n    // update the tree\r\n    // source - source node of the update\r\n    // transition - whether to do a transition\r\n\r\n    function update(source, transition) {\r\n        selectNode(source);\r\n        if(source == root){\r\n          if (root.children) {\r\n            root.children.forEach(function(child) {\r\n                collapseTree(child);\r\n            });\r\n          }\r\n        }\r\n        // console.log(flag)\r\n        // var duration = transition ?\r\n        //   (event && event.altKey ? DURATION * 4 : DURATION) : 0;\r\n        var duration = 2\r\n\r\n        // Compute the new tree layout.\r\n\r\n        var nodes = tree(source).descendants();\r\n        var links = tree(source).links();\r\n        svgGroup.transition().duration(duration)\r\n        .attr('transform',\r\n          'rotate(' + curR + ' ' + curX + ' ' + curY +\r\n          ')translate(' + curX + ' ' + curY +\r\n          ')scale(' + curZ + ')');\r\n\r\n      // Update the nodes…\r\n      var node = svgGroup.selectAll('g.node')\r\n        .data(nodes, function(d) {\r\n          return d.id || (d.id = ++counter);\r\n        });\r\n\r\n        function wrap(text, width) {\r\n          text.each(function() {\r\n\r\n            var text = d3.select(this),\r\n                words = text.text().split(/\\s+/).reverse(),\r\n                word,\r\n                line = [],\r\n                lineNumber = 0,\r\n                lineHeight = 1.1, // ems\r\n                y = text.attr(\"y\"),\r\n                dy = parseFloat('.35em')/2,\r\n                tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\r\n                // console.log(words, y, text.attr(\"dy\"))\r\n            while (word = words.pop()) {\r\n              line.push(word);\r\n              tspan.text(line.join(\"  \"));\r\n              if (tspan.node().getComputedTextLength() > width) {\r\n                line.pop();\r\n                tspan.text(line.join(\"  \"));\r\n                line = [word];\r\n                tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", lineHeight + dy + \"em\").text(word);\r\n              }\r\n            }\r\n          });\r\n        }\r\n\r\n      // Enter any new nodes at the parent's previous position\r\n      var nodeEnter = node.enter().insert('g', ':first-child')\r\n          .attr('class', 'node')\r\n          // .attr('transform', 'rotate(' + (source.x0 - 90) + ')translate(' + source.y0 + ')')\r\n          .on('click', click)\r\n          .on('dblclick', dblclick)\r\n          // .on('mousedown', suppress);\r\n\r\n      nodeEnter.append('circle')\r\n        .attr('r', 1e-6)\r\n        .style('fill', function(d) {\r\n          return d._children ? HAS_CHILDREN_COLOR : 'white';\r\n        });\r\n\r\n      nodeEnter.append('text')\r\n        // .text(function(d) {  if(d.name.length > 10) { return wordwrap(d.name, 10, '<br>') } } )\r\n        .text(function(d) {\r\n          return d.id.substring(d.id.lastIndexOf(\"\\\\\") + 1);\r\n          // return d.data.name;\r\n        })\r\n        .style('opacity', 0.9)\r\n        .style('fill-opacity', 0)\r\n        .attr('transform', function() {\r\n            return ((source.x0 + curR) % 360 <= 180 ?\r\n                'translate(8)scale(' :\r\n                'rotate(180)translate(-8)scale('\r\n              ) + reduceZ() + ')';\r\n        });\r\n\r\n      // update existing graph nodes\r\n\r\n      // Change the circle fill depending on whether it has children and is collapsed\r\n      node.select('circle')\r\n        .attr('r', NODE_DIAMETER * reduceZ())\r\n        .style('fill', function(d) {\r\n            return d._children ? HAS_CHILDREN_COLOR : 'white';\r\n        }).attr('stroke', function(d) {\r\n            return d.selected ? SELECTED_COLOR : 'steelblue';\r\n        }).attr('stroke-width', function(d) {\r\n            return d.selected ? 3 : 1.5;\r\n        });\r\n\r\n      node.select('text')\r\n        .attr('text-anchor', function(d) {\r\n            return (d.x + curR) % 360 <= 180 ? 'start' : 'end';\r\n        }).attr('transform', function(d) {\r\n            return ((d.x + curR) % 360 <= 180 ?\r\n                'translate(8)scale(' :\r\n                'rotate(180)translate(-8)scale('\r\n              ) + reduceZ() +')';\r\n        }).attr('fill', function(d) {\r\n            return d.selected ? SELECTED_COLOR : 'black';\r\n        }).attr('dy', '.35em');\r\n\r\n      var nodeUpdate = node.merge(nodeEnter).transition().duration(duration)\r\n        .delay( transition ? function(d, i) {\r\n            return i * STAGGERN +\r\n              Math.abs(d.depth - curNode.depth) * STAGGERD; }  : 0)\r\n        .attr('transform', function(d) {\r\n            return 'rotate(' + (d.x - 90) + ')translate(' + d.y + ')';\r\n        });\r\n\r\n      nodeUpdate.select('circle')\r\n        .attr('r', NODE_DIAMETER * reduceZ());\r\n        // .style('fill', function(d) {\r\n        //   return d._children ? HAS_CHILDREN_COLOR : 'white';\r\n        // });\r\n\r\n      nodeUpdate.select('text')\r\n        .style('fill-opacity', 1);\r\n      nodeUpdate.select(\"text\").call(wrap, 100);\r\n\r\n      // Transition exiting nodes to the parent's new position and remove\r\n      var nodeExit = node.exit().transition().duration(duration)\r\n        .delay( transition ? function(d, i) {\r\n            return i * STAGGERN; } : 0)\r\n        .attr('transform', function() {\r\n          return 'rotate(' + (source.x - 90) +')translate(' + source.y + ')';\r\n      }).remove();\r\n\r\n      nodeExit.select('circle').attr('r', 0);\r\n      nodeExit.select('text').style('fill-opacity', 0);\r\n\r\n        // Update the links...\r\n        var link = svgGroup.selectAll('path.link')\r\n            .data(links, function(d) {\r\n              return d.target.id;\r\n            });\r\n\r\n// Enter any new links at the parent's previous position\r\n    link.enter().insert('path', 'g')\r\n        .attr('class', 'link')\r\n        .attr(\"d\", function(d) {\r\n                  return \"M\" + project(d.target.x, d.target.y)\r\n                      + \"C\" + project(d.target.x, (d.target.y + d.source.y) / 2)\r\n                      + \" \" + project(d.source.x, (d.target.y + d.source.y) / 2)\r\n                      + \" \" + project(d.source.x, d.source.y);\r\n                })\r\n\r\n    // Transition links to their new position\r\n    link.transition().duration(duration)\r\n      .delay( transition ? function(d, i) {\r\n          return i * STAGGERN +\r\n            Math.abs(d.source.depth - curNode.depth) * STAGGERD;\r\n            // Math.max(0, d.source.depth - curNode.depth) * STAGGERD;\r\n          } : 0)\r\n          .attr(\"d\", function(d) {\r\n            return \"M\" + project(d.target.x, d.target.y)\r\n                + \"C\" + project(d.target.x, (d.target.y + d.source.y) / 2)\r\n                + \" \" + project(d.source.x, (d.target.y + d.source.y) / 2)\r\n                + \" \" + project(d.source.x, d.source.y);\r\n          })\r\n\r\n    // Transition exiting nodes to the parent's new position\r\n    link.exit().transition().duration(duration)\r\n    .attr(\"d\", function(d) {\r\n      return \"M\" + project(d.target.x, d.target.y)\r\n          + \"C\" + project(d.target.x, (d.target.y + d.source.y) / 2)\r\n          + \" \" + project(d.source.x, (d.target.y + d.source.y) / 2)\r\n          + \" \" + project(d.source.x, d.source.y);\r\n    }).remove();\r\n\r\n        // Stash the old positions for transition\r\n        nodes.forEach(function(d) {\r\n          d.x0 = d.x;\r\n          d.y0 = d.y;\r\n        });\r\n      } // end update\r\n\r\n    // Helper functions for collapsing and expanding nodes\r\n\r\n    // Toggle expand / collapse\r\n    // function toggle(d) {\r\n    //   console.log(d.children, d._children)\r\n    //   if (d.children) {\r\n    //     d._children = d.children;\r\n    //     d.children = null;\r\n    //   } else if (d._children) {\r\n    //     d.children = d._children;\r\n    //     d._children = null;\r\n    //   }\r\n    // }\r\n\r\n\r\n    function toggleTree(d) {\r\n      if (d.children) {\r\n        collapseTree(d);\r\n      } else {\r\n        expandTree(d);\r\n      }\r\n    }\r\n\r\n    function expand(d) {\r\n      if (d._children) {\r\n        d.children = d._children;\r\n        d._children = null;\r\n      }\r\n    }\r\n\r\n    // expand all children, whether expanded or collapsed\r\n    function expandTree(d) {\r\n      if (d._children) {\r\n        d.children = d._children;\r\n        d._children = null;\r\n      }\r\n      if (d.children) {\r\n        d.children.forEach(expandTree);\r\n      }\r\n    }\r\n\r\n    function collapse(d) {\r\n      if (d.children) {\r\n        d._children = d.children;\r\n        d.children = null;\r\n      }\r\n    }\r\n\r\n  //   // collapse all children\r\n    function collapseTree(d) {\r\n      if (d.children) {\r\n        d._children = d.children;\r\n        d.children = null;\r\n      }\r\n      if (d._children) {\r\n        d._children.forEach(collapseTree);\r\n      }\r\n    }\r\n\r\n  //   // expand one level of tree\r\n    function expand1Level(d) {\r\n      var q = [d]; // non-recursive\r\n      var cn;\r\n      var done = null;\r\n      while (q.length > 0) {\r\n        cn = q.shift();\r\n        if (done !== null && done < cn.depth) { return; }\r\n        if (cn._children) {\r\n          done = cn.depth;\r\n          cn.children = cn._children;\r\n          cn._children = null;\r\n          cn.children.forEach(collapse);\r\n        }\r\n        if (cn.children) { q = q.concat(cn.children); }\r\n      }\r\n      // no nodes to open\r\n    }\r\n\r\n  //   // highlight selected node\r\n    function selectNode(node) {\r\n      if (curNode) {\r\n        delete curNode.selected;\r\n      }\r\n      curNode = node;\r\n      curNode.selected = true;\r\n      curPath = []; // filled in by fullpath\r\n      // console.log(\"curnode\", curNode)\r\n      d3.select('#selection').html(fullpath(node));\r\n    }\r\n\r\n  //   // for displaying full path of node in tree\r\n    function fullpath(d, idx) {\r\n      idx = idx || 0;\r\n      curPath.push(d);\r\n      return (\r\n        d.parent ? fullpath(d.parent, curPath.length) : '') +\r\n        '/<span class=\"nodepath'+(d.data.name === root.data.name ? ' highlight' : '')+\r\n        '\" data-sel=\"'+ idx +'\" title=\"Set Root to '+ d.data.name +'\">' +\r\n        d.name + '</span>';\r\n    }\r\n\r\n  //   // d3 event handlers\r\n\r\n    function switchroot(event) {\r\n      event.preventDefault();\r\n      var pathelms = document.querySelectorAll('#selection .nodepath');\r\n      for (var i = 0; i < pathelms.length; i++) {\r\n        pathelms[i].classList.remove('highlight');\r\n      }\r\n      var target = event.target;\r\n      var node = curPath[+target.dataset.sel];\r\n      if (event.shiftKey) {\r\n        if (curNode !== node) {\r\n          selectNode(node);\r\n        }\r\n      } else {\r\n        root = node;\r\n        target.classList.add('highlight');\r\n      }\r\n      update(root, true);\r\n    }\r\n\r\n    // function click(event, d) { // select node\r\n    //   console.log(\"click\", d)\r\n    //   if (event.defaultPrevented || d === curNode) { return; } // suppressed\r\n    //   event.preventDefault();\r\n    //   selectNode(d);\r\n    //   update(d, true);\r\n    // //   update(d, true);\r\n    // }\r\n\r\n    function dblclick(event, d) {  // Toggle children of node\r\n      if (event.defaultPrevented) { return; } // click suppressed\r\n      event.preventDefault();\r\n      // if (event.shiftKey) {\r\n      //   console.log(\"shift\")\r\n      //   expand1Level(d); // expand node by one level\r\n      // } else {\r\n      //   console.log(\"trigger\")\r\n      //   toggle(d);\r\n      // }\r\n      // toggle(d);\r\n      // expand1Level(d);\r\n      if(flag === 0){\r\n        flag = 1;\r\n        update(d, true);\r\n        update(d, true);\r\n\r\n      }else{\r\n        flag = 0;\r\n        update(root, true);\r\n        update(root, true);\r\n\r\n      }\r\n\r\n      // update(d, true);\r\n    }\r\n\r\n    var startposX, startposY; // initial position on mouse button down for pan\r\n\r\n\r\n    // keep rotation between 0 and 360\r\n    function limitR(r) {\r\n      return (r + 360) % 360;\r\n    }\r\n\r\n  //   // limit size of text and nodes as scale increases\r\n    function reduceZ() {\r\n      return Math.pow(1.1, -curZ);\r\n    }\r\n\r\n  //   // set view with no animation\r\n    function setview() {\r\n        svgGroup.attr('transform', 'rotate(' + curR + ' ' + curX + ' ' + curY +\r\n            ')translate(' + curX + ' ' + curY + ')scale(' + curZ + ')');\r\n        svgGroup.selectAll('text')\r\n            .attr('text-anchor', function(d) {\r\n                return (d.x + curR) % 360 <= 180 ? 'start' : 'end';\r\n            })\r\n            .attr('transform', function(d) {\r\n                return ((d.x + curR) % 360 <= 180 ?\r\n                    'translate(8)scale(' :\r\n                    'rotate(180)translate(-8)scale('\r\n                  ) + reduceZ() +')';\r\n            });\r\n        svgGroup.selectAll('circle').attr('r', NODE_DIAMETER * reduceZ());\r\n    }\r\n\r\n    var color2 = d3.scaleOrdinal().range(d3.schemeCategory10)\r\n    var margin = {top: 28, right: 40, bottom: 50, left: 40},\r\n    width = Math.min(275, window.innerWidth - 10) - margin.left - margin.right,\r\n    height = Math.min(width, window.innerHeight - margin.top - margin.bottom - 20);\r\n    var labels = ['rating', 'price', 'sweetness', 'intensity', 'tannin', 'acidity']\r\n\r\n    var radarChartOptions2 = {\r\n        w: width,\r\n        h: height,\r\n        margin: margin,\r\n        maxValue: 0.5,\r\n        levels: 1,\r\n        roundStrokes: true,\r\n        color: color2,\r\n        labels: labels\r\n    };\r\n\r\n\r\n\r\n\r\n        let new_data = []\r\n        const parseF = str => (str ? parseFloat(str) : 0)\r\n        const parseS = str => (str ? str : 'Unknown')\r\n\r\n        // build scales\r\n        let range = 0.03\r\n        let scales = {}\r\n        labels.map(l => {\r\n            let sorted = dataset.map(d => d[l])\r\n                .filter(v => v)\r\n                .sort((a, b) => a-b)\r\n\r\n            scales[l] = d3.scaleLinear()\r\n            // .domain([d3.min(dataset, (d) => parseF(d[l])),\r\n            // \t\td3.max(dataset, (d) => parseF(d[l]))])\r\n                .domain([d3.min(dataset, (d) => parseF(sorted[Math.floor(sorted.length*range)])),\r\n                    d3.max(dataset, (d) => parseF(sorted[Math.floor(sorted.length*(1-range))]))])\r\n                .range([0.1, 1])\r\n        })\r\n\r\n\r\n\r\n        function click(event, d){\r\n            var name = d.id.substring(d.id.lastIndexOf(\"\\\\\") + 1);\r\n            if(d.children){\r\n                return;\r\n            }\r\n            // console.log(dataset[0]['name'])\r\n            var target;\r\n            for(var i in dataset){\r\n                if(dataset[i]['name'] == name){\r\n                    target = i;\r\n                    break;\r\n                }\r\n            }\r\n            // console.log(target)\r\n            if (new_data.length < 6) {\r\n                let d = dataset[target]\r\n                // console.log(d)\r\n                new_data.push(labels.map(l => {\r\n                    let lowbound = 0, upbound = 1.1\r\n                    let value = scales[l](parseF(d[l]))\r\n                    value = Math.min(Math.max(value, lowbound), upbound)\r\n                    return {axis:l, value:value, actValue:parseS(d[l])}\r\n                }))\r\n                CompareRadar(\".radarChart\", new_data, radarChartOptions2, new_data);\r\n            }\r\n            return new_data\r\n        }\r\n\r\n                // CompareRadar(\".compareRadar\", new_data, radarChartOptions2, new_data);\r\n\r\n\r\n            })\r\n\r\n\r\n  });\r\n\r\n\r\n}\r\n","import React from \"react\";\r\nimport * as d3 from 'd3';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport dataset from \"../../data/wine_name_grapes.csv\";\r\nimport dataset_tree from \"../../data/tree.csv\";\r\nimport dataset_radar from '../../data/wine_radar.csv'\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport '../../css/radialTree.css'\r\nimport drawGrapeChart from './grape'\r\nimport drawRadialChart from './radial'\r\nimport {colorScale} from '../utils/constant'\r\nimport styleRadar from './radar_style'\r\n\r\nvar margin = {top: 28, right: 40, bottom: 50, left: 40},\r\n    width = Math.min(275, window.innerWidth - 10) - margin.left - margin.right,\r\n    height = Math.min(width, window.innerHeight - margin.top - margin.bottom - 20);\r\n\r\n\r\nvar labels = ['rating', 'price', 'sweetness', 'intensity', 'tannin', 'acidity']\r\nvar color = d3.scaleOrdinal().range(['#6a111c'])\r\n\r\nvar radarChartOptions = {\r\n    w: width,\r\n    h: height,\r\n    margin: margin,\r\n    maxValue: 0.5,\r\n    levels: 1,\r\n    roundStrokes: true,\r\n    color: color,\r\n    labels: labels\r\n};\r\n\r\nexport default class RadialTree extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        drawGrapeChart(\".drawGrapeChart\", dataset)\r\n        drawRadialChart(\".drawRadialChart\", dataset_tree, dataset_radar, \"Wine\")\r\n\r\n        function drawGrapeChart(id, csvpath){\r\n            d3.csv(csvpath).then((data) => {\r\n                d3.csv(dataset_radar).then((dataset) => {\r\n\r\n                // const svg = d3.select('#svg');\r\n                // const width = +svg.attr('width');\r\n                // const height = +svg.attr('height');\r\n                const width = 900;\r\n                const height = 800;\r\n                const svg = d3.select(id).append(\"svg\")\r\n                            .attr('width', width)\r\n                            .attr(\"height\", height)\r\n\r\n                const outerRadius = width * 0.45;\r\n                const innerRadius = outerRadius - 150;\r\n\r\n                const indexByName = new Map;\r\n                const nameByIndex = new Map;\r\n                const matrix = [];\r\n                const colores = new Map;\r\n                let n = 0;\r\n\r\n                data.forEach(d => {\r\n                    const type = d.type\r\n                    if (!indexByName.has(d = d.name)) {\r\n                        colores.set(n, colorScale[type]);\r\n                        nameByIndex.set(n, d);\r\n                        indexByName.set(d, n++);\r\n                    }\r\n                });\r\n\r\n                const data_size = n;\r\n\r\n                data.forEach(d => {\r\n                    if (!indexByName.has(d = d.grapes)) {\r\n                        colores.set(n, d3.rgb(121, 121, 121));\r\n                        nameByIndex.set(n, d);\r\n                        indexByName.set(d, n++);\r\n                    }\r\n                });\r\n\r\n                data.forEach(d => {\r\n                    const source = indexByName.get(d.name)\r\n                    let row = matrix[source];\r\n                    if (!row) row = matrix[source] = Array.from({length: n}).fill(0);\r\n                    row[indexByName.get(d.grapes)]++;\r\n\r\n                });\r\n\r\n                data.forEach(d => {\r\n                    const source = indexByName.get(d.grapes)\r\n                    let row = matrix[source];\r\n                    if (!row) row = matrix[source] = Array.from({length: n}).fill(0);\r\n                    row[indexByName.get(d.name)]++;\r\n\r\n                });\r\n\r\n\r\n                const chord = d3.chord()\r\n                    .padAngle(.04)\r\n                    .sortSubgroups(d3.descending)\r\n                    .sortChords(d3.descending)\r\n\r\n                const arc = d3.arc()\r\n                    .innerRadius(innerRadius)\r\n                    .outerRadius(innerRadius + 20)\r\n\r\n                const ribbon = d3.ribbon()\r\n                    .radius(innerRadius)\r\n\r\n                const chords = chord(matrix);\r\n\r\n\r\n                const g = svg.append(\"g\")\r\n                    .attr(\"transform\", \"translate(\" + (width - 100)/ 2 + \",\" + (height - 50) / 2 + \")\")\r\n                    .datum(chord(matrix));\r\n\r\n                const group = g.append(\"g\")\r\n                    .selectAll(\"g\")\r\n                    .data(chords.groups)\r\n                    .join(\"g\");\r\n\r\n                group.append(\"path\")\r\n                    .attr(\"fill\", d => d3.rgb(colores.get(d.index)).darker())\r\n                    .attr(\"stroke\", d => d3.rgb(colores.get(d.index)).darker())\r\n                    .attr(\"d\", arc)\r\n                // .on(\"mouseover\", onMouseOver)\r\n                // .on(\"mouseout\", onMouseOut);\r\n\r\n                group.append(\"text\")\r\n                    .each(d => { d.angle = (d.startAngle + d.endAngle) / 2; })\r\n                    .attr(\"dy\", \".35em\")\r\n                    .attr(\"transform\", d => `\r\n              rotate(${(d.angle * 180 / Math.PI - 90)})\r\n              translate(${innerRadius + 26})\r\n              ${d.angle > Math.PI ? \"rotate(180)\" : \"\"}\r\n            `)\r\n                    .attr(\"font-size\", 9)\r\n                    .attr(\"text-anchor\", d => d.angle > Math.PI ? \"end\" : null)\r\n                    .text(d => {if(d.index<data_size) return nameByIndex.get(d.index)})\r\n                    .attr(\"fill\", \"#8c559b\")\r\n                    .on(\"mouseover\", (event, d) => onMouseOver(d))\r\n                    .on(\"mouseout\", (event, d) => onMouseOut(d))\r\n                    .append(\"tspan\")\r\n                    .attr(\"fill\", \"#2b4c2a\")\r\n                    .text(d => {if(d.index>=data_size) return nameByIndex.get(d.index)})\r\n                    .on(\"mouseover\", (event, d) => onMouseOver(d))\r\n                    .on(\"mouseout\", (event, d) => onMouseOut(d));\r\n\r\n\r\n                function onMouseOver(selected) {\r\n                    // console.log(nameByIndex.get(selected.index))\r\n                    key_filter(nameByIndex.get(selected.index))\r\n                    if(selected.index>=data_size){\r\n                        drawRadialChart(\".drawRadialChart\", dataset_tree, dataset_radar, \"Wine\")\r\n                    }\r\n                    else{\r\n                        drawRadialChart(\".drawRadialChart\", dataset_tree, dataset_radar, nameByIndex.get(selected.index))\r\n                    }\r\n                    var target_index = []\r\n                    for (var i = 0; i < matrix[selected.index].length; i++) {\r\n                        if (matrix[selected.index][i] === 1)\r\n                            target_index.push(i)\r\n                    }\r\n                    group\r\n                        .filter(function (d) {\r\n                            var flag = true\r\n                            for (i in target_index) {\r\n                                if (d.index === target_index[i])\r\n                                    flag = false\r\n                            }\r\n                            return d.index !== selected.index && flag\r\n                        })\r\n                        .style(\"opacity\", 0.2);\r\n\r\n                    g.selectAll(\".chord\")\r\n                        .filter(d => (d.source.index !== selected.index && d.target.index !== selected.index))\r\n                        .style(\"opacity\", 0.1);\r\n                }\r\n\r\n                function onMouseOut() {\r\n                    group.style(\"opacity\", 1);\r\n                    g.selectAll(\".chord\")\r\n                        .style(\"opacity\", 1);\r\n                }\r\n\r\n                g.append(\"g\")\r\n                    .attr(\"fill-opacity\", 0.85)\r\n                    .selectAll(\"path\")\r\n                    .data(chords)\r\n                    .join(\"path\")\r\n                    .attr(\"class\", \"chord\")\r\n                    .attr(\"stroke\", d => d3.rgb(colores.get(d.source.index)))\r\n                    .attr(\"fill\", d => colores.get(d.source.index))\r\n                    .attr(\"d\", ribbon)\r\n                    // .on(\"mouseover\", (event, d) => onMouseOver(d))\r\n                    .on(\"mouseover\", (event, d) => onMouseOver(d.source))\r\n                    .on(\"mouseout\", (event, d) => onMouseOut(d.source));\r\n\r\n\r\n                var svgLegned = svg.append(\"g\")\r\n                    .attr(\"transform\", `translate(${width - 80},${height - 250})`);\r\n\r\n                var keys = [];\r\n                for (const key in colorScale) {\r\n                    keys.push(key);\r\n                }\r\n\r\n                var legend = svgLegned.selectAll('g')\r\n                    .data(keys)\r\n                    .enter().append('g')\r\n                    .attr(\"class\", \"legends\")\r\n                    .attr(\"transform\", function (d, i) {\r\n                        {\r\n                            return \"translate(0,\" + i * 20 + \")\"\r\n                        }\r\n                    })\r\n\r\n                legend.append('rect')\r\n                    .attr(\"x\", 0)\r\n                    .attr(\"y\", 0)\r\n                    .attr(\"width\", 10)\r\n                    .attr(\"height\", 10)\r\n                    .style(\"fill\", function (d, i) {\r\n                        return colorScale[d]\r\n                    })\r\n\r\n                legend.append('text')\r\n                    .attr(\"x\", 20)\r\n                    .attr(\"y\", 5)\r\n                    .attr(\"dy\", \".35em\")\r\n                    .text(function (d, i) {\r\n                        return d\r\n                    })\r\n                    .attr(\"class\", \"textselected\")\r\n                    .style(\"text-anchor\", \"start\")\r\n                    .style(\"font-size\", 10)\r\n\r\n\r\n\r\n\r\n        // d3.csv(dataset_radar)\r\n        // .then((dataset) => {\r\n            let count = key => dataset.filter(d => d.style_varietal_name === key).length\r\n            // console.log(count('Red'))\r\n            var key_list = dataset\r\n                .map(d => d.style_name)\r\n                .filter(d => d)\r\n                .filter((d,i,self) => (self.indexOf(d) === i))\r\n                .filter(d => count(d) >= 10)\r\n            key_list = Array.from(new Set(key_list))\r\n\r\n            var select = d3.select('#select')\r\n                .attr('class','select')\r\n                .on('change', e => {\r\n                    console.log(d3.select('select').property('value'))\r\n                    key_filter(d3.select('select').property('value'))\r\n                })\r\n            var options = select\r\n                .selectAll('option')\r\n                .data(key_list).enter()\r\n                .append('option')\r\n                .text(function (d) {return d;});\r\n\r\n\r\n            let new_data = []\r\n            const parseF = str => (str ? parseFloat(str) : 0)\r\n            const parseS = str => (str ? str : 'Unknown')\r\n\r\n            // filter entry with empty value\r\n            let key=['style_name', 'White']\r\n            const sum = (a, b) => a+b\r\n            const valid = d => (labels.map(l => (d[l] ? 1 : 0)).reduce(sum, 0) >= labels.length)\r\n\r\n            // build scales\r\n            let range = 0.03\r\n            let scales = {}\r\n            labels.map(l => {\r\n                let sorted = dataset.map(d => d[l])\r\n                    .filter(v => v)\r\n                    .sort((a, b) => a-b)\r\n\r\n                scales[l] = d3.scaleLinear()\r\n                // .domain([d3.min(dataset, (d) => parseF(d[l])),\r\n                // \t\td3.max(dataset, (d) => parseF(d[l]))])\r\n                    .domain([d3.min(dataset, (d) => parseF(sorted[Math.floor(sorted.length*range)])),\r\n                        d3.max(dataset, (d) => parseF(sorted[Math.floor(sorted.length*(1-range))]))])\r\n                    .range([0.1, 1])\r\n            })\r\n\r\n\r\n            function key_filter(key) {\r\n                d3.select('#count').text(`Count: ${count(key)}`)\r\n\r\n                let new_data = []\r\n                let filtered = dataset\r\n                // .filter(d => valid(d))\r\n                    .filter(d => (d['style_name'] === key))\r\n\r\n                filtered.forEach((d,i) => {\r\n                    new_data.push(labels.map(l => {\r\n                        let lowbound = 0, upbound = 1.1\r\n                        let value = scales[l](parseF(d[l]))\r\n                        value = Math.min(Math.max(value, lowbound), upbound)\r\n                        return {axis:l, value:value, actValue:parseS(d[l])}\r\n                    }))\r\n                })\r\n                styleRadar(\".radarChart\", new_data, radarChartOptions);\r\n            }\r\n            key_filter('Red')\r\n\r\n        });\r\n    })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div id=\"radialContainer\">\r\n                <Grid spacing={0} container>\r\n                    <Grid md={8} xs={8} item>\r\n                        <h1 align=\"center\">Grape - Style Chord</h1>\r\n                        <div className=\"drawGrapeChart\"></div>\r\n                    </Grid>\r\n                    <Grid  item>\r\n                        <Grid\r\n                        spacing={0}\r\n                        direction=\"column\"\r\n                        container\r\n                        >\r\n                        <Grid item>\r\n                            <h3 align=\"center\">Top 15 wines of selected style</h3>\r\n                            <div className=\"drawRadialChart\"></div>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <h3 align=\"center\">Style Radar</h3>\r\n                            <div className=\"radarChart\"></div>\r\n                        </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {/* <Grid xs={3} item>\r\n                        <Grid\r\n                        spacing={2}\r\n                        direction=\"column\"\r\n                        container\r\n                        >\r\n                        <Grid item>\r\n                            <h1>Intro of this wine style</h1>\r\n                            <p> Text</p>\r\n                        </Grid>\r\n                    </Grid>\r\n                    </Grid> */}\r\n                    </Grid>\r\n        </div>\r\n\r\n        )\r\n    }\r\n}\r\n","/////////////////////////////////////////////////////////\r\n/////////////// The Radar Chart Function ////////////////\r\n/////////////// Written by Nadieh Bremer ////////////////\r\n////////////////// VisualCinnamon.com ///////////////////\r\n/////////// Inspired by the code of alangrafu ///////////\r\n/////////////////////////////////////////////////////////\r\nimport * as d3 from 'd3';\r\n\r\nexport default function styleRadar(id, data, options) {\r\n\tvar cfg = {\r\n\t w: 300,\t\t\t\t//Width of the circle\r\n\t h: 300,\t\t\t\t//Height of the circle\r\n\t margin: {top: 20, right: 20, bottom: 20, left: 20}, //The margins of the SVG\r\n\t levels: 3,\t\t\t\t//How many levels or inner circles should there be drawn\r\n\t maxValue: 0, \t\t\t//What is the value that the biggest circle will represent\r\n\t labelFactor: 1.25, \t//How much farther than the radius of the outer circle should the labels be placed\r\n\t wrapWidth: 60, \t\t//The number of pixels after which a label needs to be given a new line\r\n\t opacityArea: 0.1, \t//The opacity of the area of the blob\r\n\t dotRadius: 4, \t\t\t//The size of the colored circles of each blog\r\n\t opacityCircles: 0.4, \t//The opacity of the circles of each blob\r\n\t strokeWidth: 2, \t\t//The width of the stroke around each blob\r\n\t roundStrokes: false,\t//If true the area and stroke will follow a round path (cardinal-closed)\r\n\t color: d3.schemeCategory10\t//Color function\r\n\t};\r\n\r\n\t//Put all of the options into a variable called cfg\r\n\tif('undefined' !== typeof options){\r\n\t  for(var i in options){\r\n\t\tif('undefined' !== typeof options[i]){ cfg[i] = options[i]; }\r\n\t  }//for i\r\n\t}//if\r\n\r\n\t//If the supplied maxValue is smaller than the actual one, replace by the max in the data\r\n\t// var maxValue = Math.max(cfg.maxValue, d3.max(data, function(i){return d3.max(i.map(function(o){return o.value;}))}));\r\n    var maxValue = 1\r\n\r\n\tvar allAxis = cfg.labels, // (data[0].map(function(i, j){return i.axis})),\t//Names of each axis\r\n\t\ttotal = allAxis.length,\t\t\t\t\t//The number of different axes\r\n\t\tradius = Math.min(cfg.w/2, cfg.h/2), \t//Radius of the outermost circle\r\n\t\tFormat = d3.format('%'),\t\t\t \t//Percentage formatting\r\n\t\tangleSlice = Math.PI * 2 / total;\t\t//The width in radians of each \"slice\"\r\n\r\n\t//Scale for the radius\r\n\tvar rScale = d3.scaleLinear()\r\n\t\t.range([0, radius])\r\n\t\t.domain([0, maxValue]);\r\n\r\n\t/////////////////////////////////////////////////////////\r\n\t//////////// Create the container SVG and g /////////////\r\n\t/////////////////////////////////////////////////////////\r\n\r\n\t//Remove whatever chart with the same id/class was present before\r\n\td3.select(id).select(\"svg\").remove();\r\n\r\n\t//Initiate the radar chart SVG\r\n\tvar svg = d3.select(id).append(\"svg\")\r\n\t\t\t.attr(\"width\",  cfg.w + cfg.margin.left + cfg.margin.right)\r\n\t\t\t.attr(\"height\", cfg.h + cfg.margin.top + cfg.margin.bottom)\r\n\t\t\t.attr(\"class\", \"radar\"+id);\r\n\t//Append a g element\r\n\tvar g = svg.append(\"g\")\r\n\t\t\t.attr(\"transform\", \"translate(\" + (cfg.w/2 + cfg.margin.left) + \",\" + (cfg.h/2 + cfg.margin.top) + \")\");\r\n\r\n\t/////////////////////////////////////////////////////////\r\n\t////////// Glow filter for some extra pizzazz ///////////\r\n\t/////////////////////////////////////////////////////////\r\n\r\n\t//Filter for the outside glow\r\n    var defs = g.append('defs')\r\n\tvar filter = defs.append('filter').attr('id','glow'),\r\n\t\tfeGaussianBlur = filter.append('feGaussianBlur').attr('stdDeviation','2.5').attr('result','coloredBlur'),\r\n\t\tfeMerge = filter.append('feMerge'),\r\n\t\tfeMergeNode_1 = feMerge.append('feMergeNode').attr('in','coloredBlur'),\r\n\t\tfeMergeNode_2 = feMerge.append('feMergeNode').attr('in','SourceGraphic');\r\n\r\n\t/////////////////////////////////////////////////////////\r\n\t/////////////// Draw the Circular grid //////////////////\r\n\t/////////////////////////////////////////////////////////\r\n\r\n\t//Wrapper for the grid & axes\r\n\tvar axisGrid = g.append(\"g\").attr(\"class\", \"axisWrapper\");\r\n\r\n\t//Draw the background circles\r\n\taxisGrid.selectAll(\".levels\")\r\n\t   .data(d3.range(1,(cfg.levels+1)).reverse())\r\n\t   .enter()\r\n\t\t.append(\"circle\")\r\n\t\t.attr(\"class\", \"gridCircle\")\r\n\t\t.attr(\"r\", function(d, i){return radius/cfg.levels*d;})\r\n\t\t.style(\"fill\", \"#CDCDCD\")\r\n\t\t.style(\"stroke\", \"#CDCDCD\")\r\n\t\t.style(\"fill-opacity\", cfg.opacityCircles)\r\n\t\t.style(\"filter\" , \"url(#glow)\");\r\n\r\n\t/////////////////////////////////////////////////////////\r\n\t//////////////////// Draw the axes //////////////////////\r\n\t/////////////////////////////////////////////////////////\r\n\r\n\t//Create the straight lines radiating outward from the center\r\n\tvar axis = axisGrid.selectAll(\".axis\")\r\n\t\t.data(allAxis)\r\n\t\t.enter()\r\n\t\t.append(\"g\")\r\n\t\t.attr(\"class\", \"axis\");\r\n\t//Append the lines\r\n    var axis_len = 0.1\r\n\taxis.append(\"line\")\r\n        .attr(\"x1\", function(d, i){ return rScale(maxValue*(1-axis_len/2)) * Math.cos(angleSlice*i - Math.PI/2); })\r\n        .attr(\"y1\", function(d, i){ return rScale(maxValue*(1-axis_len/2)) * Math.sin(angleSlice*i - Math.PI/2); })\r\n\t\t.attr(\"x2\", function(d, i){ return rScale(maxValue*(1+axis_len/2)) * Math.cos(angleSlice*i - Math.PI/2); })\r\n\t\t.attr(\"y2\", function(d, i){ return rScale(maxValue*(1+axis_len/2)) * Math.sin(angleSlice*i - Math.PI/2); })\r\n\t\t.attr(\"class\", \"line\")\r\n\t\t.style(\"stroke\", \"#CDCDCD\")\r\n\t\t.style(\"stroke-width\", \"2px\")\r\n        .attr(\"x1\", 0)\r\n        .attr(\"y1\", 0)\r\n\t\t.style(\"stroke\", \"white\")\r\n\r\n\r\n\r\n\t//Append the labels at each axis\r\n\taxis.append(\"text\")\r\n\t\t.attr(\"class\", \"legend\")\r\n\t\t.style(\"font-size\", \"11px\")\r\n\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t.attr(\"dy\", \"0.35em\")\r\n\t\t.attr(\"x\", function(d, i){ return rScale(maxValue * cfg.labelFactor) * Math.cos(angleSlice*i - Math.PI/2); })\r\n\t\t.attr(\"y\", function(d, i){ return rScale(maxValue * cfg.labelFactor) * Math.sin(angleSlice*i - Math.PI/2); })\r\n\t\t.text(function(d){return d})\r\n\t\t.call(wrap, cfg.wrapWidth);\r\n\r\n    if (data.length == 0) {\r\n        return ;\r\n    }\r\n\r\n\t/////////////////////////////////////////////////////////\r\n\t///////////// Draw the radar chart blobs ////////////////\r\n\t/////////////////////////////////////////////////////////\r\n\r\n\t//The radial line function\r\n\tvar radarLine = d3.radialLine()\r\n        .curve(d3.curveLinearClosed)\r\n        .radius(d => rScale(d.value))\r\n        .angle((d,i) => i * angleSlice);\r\n\r\n\tif(cfg.roundStrokes) {\r\n\t\tradarLine.curve(d3.curveCardinalClosed)\r\n\t}\r\n\r\n    // data = data.map((d,i) => Object.assign({i:i}, d))\r\n    // console.log(data)\r\n\r\n\t//Create a wrapper for the blobs\r\n\tvar blobWrapper = g.selectAll(\".radarWrapper\")\r\n\t\t.data(data)\r\n\t\t.enter().append(\"g\")\r\n\t\t.attr(\"class\", \"radarWrapper\");\r\n\r\n\t//Append the backgrounds\r\n\tblobWrapper\r\n\t\t.append(\"path\")\r\n\t\t.attr(\"class\", \"radarArea\")\r\n\t\t.attr(\"d\", function(d,i) { return radarLine(d); })\r\n\t\t.style(\"fill\", function(d,i) { return cfg.color(i); })\r\n\t\t.style(\"fill-opacity\", cfg.opacityArea)\r\n\t\t// .on('mouseover', function (d,i){\r\n\t\t// \t//Dim all blobs\r\n\t\t// \td3.selectAll(\".radarArea\")\r\n\t\t// \t\t.transition().duration(200)\r\n\t\t// \t\t.style(\"fill-opacity\", 0.1);\r\n\t\t// \t//Bring back the hovered over blob\r\n\t\t// \td3.select(this)\r\n\t\t// \t\t.transition().duration(200)\r\n\t\t// \t\t.style(\"fill-opacity\", 0.7);\r\n\t\t// })\r\n\t\t// .on('mouseout', function(){\r\n\t\t// \t//Bring back all blobs\r\n\t\t// \td3.selectAll(\".radarArea\")\r\n\t\t// \t\t.transition().duration(200)\r\n\t\t// \t\t.style(\"fill-opacity\", cfg.opacityArea);\r\n\t\t// })\r\n        // .on(\"contextmenu\", function(e,d) {\r\n        //     e.preventDefault();\r\n        //     new_data.splice(new_data.findIndex(_d => _d === d), 1)\r\n        //     RadarChart(\".radarChart\", new_data, options)\r\n        // })\r\n        // .attr(\"mask\", (d, i) => {\r\n        //     return `url(#mask${i})`;\r\n        // })\r\n\r\n\t//Create the outlines\r\n\tblobWrapper.append(\"path\")\r\n\t\t.attr(\"class\", \"radarStroke\")\r\n\t\t.attr(\"d\", function(d,i) { return radarLine(d); })\r\n\t\t// .style(\"stroke-width\", cfg.strokeWidth + \"px\")\r\n\t\t// .style(\"stroke\", function(d,i) { return cfg.color(i); })\r\n\t\t.style(\"fill\", \"none\")\r\n\t\t// .style(\"filter\" , \"url(#glow)\");\r\n\r\n\t//Append the circles\r\n\t// blobWrapper.selectAll(\".radarCircle\")\r\n\t// \t.data(function(d,i) { return d.map(d => [d, i]); })\r\n\t// \t.enter().append(\"circle\")\r\n\t// \t.attr(\"class\", \"radarCircle\")\r\n\t// \t.attr(\"r\", cfg.dotRadius)\r\n\t// \t.attr(\"cx\", function(d,i){ return rScale(d[0].value) * Math.cos(angleSlice*i - Math.PI/2); })\r\n\t// \t.attr(\"cy\", function(d,i){ return rScale(d[0].value) * Math.sin(angleSlice*i - Math.PI/2); })\r\n\t// \t.style(\"fill\", function(d,i) { return cfg.color(d[1]); })\r\n\t// \t// .style(\"fill-opacity\", cfg.opacityArea);\r\n    //     .style(\"fill-opacity\", 1);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t/////////////////////////////////////////////////////////\r\n\t//////// Append invisible circles for tooltip ///////////\r\n\t/////////////////////////////////////////////////////////\r\n\r\n\t// //Wrapper for the invisible circles on top\r\n\t// var blobCircleWrapper = g.selectAll(\".radarCircleWrapper\")\r\n\t// \t.data(data)\r\n\t// \t.enter().append(\"g\")\r\n\t// \t.attr(\"class\", \"radarCircleWrapper\");\r\n\r\n\t// //Append a set of invisible circles on top for the mouseover pop-up\r\n\t// blobCircleWrapper.selectAll(\".radarInvisibleCircle\")\r\n\t// \t.data(function(d,i) { return d; })\r\n\t// \t.enter().append(\"circle\")\r\n    //     // .attr(\"class\", \"radarArea\")\r\n\t// \t.attr(\"class\", \"radarInvisibleCircle\")\r\n\t// \t.attr(\"r\", cfg.dotRadius*1.5)\r\n\t// \t.attr(\"cx\", function(d,i){ return rScale(d.value) * Math.cos(angleSlice*i - Math.PI/2); })\r\n\t// \t.attr(\"cy\", function(d,i){ return rScale(d.value) * Math.sin(angleSlice*i - Math.PI/2); })\r\n\t// \t.style(\"fill\", \"none\")\r\n\t// \t.style(\"pointer-events\", \"all\")\r\n\t// \t.on(\"mouseover\", function(e,d) {\r\n\t// \t\tnewX =  parseFloat(d3.select(this).attr('cx')) - 10;\r\n\t// \t\tnewY =  parseFloat(d3.select(this).attr('cy')) - 10;\r\n\r\n\t// \t\ttooltip\r\n\t// \t\t\t.attr('x', newX)\r\n\t// \t\t\t.attr('y', newY)\r\n\t// \t\t\t.text(d.axis + ':' + String(d.actValue))\r\n\t// \t\t\t.transition().duration(200)\r\n\t// \t\t\t.style('opacity', 1);\r\n\t// \t})\r\n\t// \t.on(\"mouseout\", function(){\r\n\t// \t\ttooltip.transition().duration(200)\r\n\t// \t\t\t.style(\"opacity\", 0);\r\n\t// \t})\r\n\r\n\r\n    // data.forEach(function(d, i){\r\n    //     const mask = defs.append(\"mask\")\r\n    //         .attr(\"id\", `mask${i}`);\r\n\r\n    //     mask.append(\"path\")\r\n    //         // .attr(\"class\", \"radarArea\")\r\n    //         .attr(\"d\", radarLine(d))\r\n    //         .style(\"fill\", 'white')\r\n\r\n    //     d.forEach((d,i) => {\r\n    //         mask.append(\"circle\")\r\n    //         .attr(\"r\", cfg.dotRadius*1.5-2)\r\n    //         .attr(\"cx\", rScale(d.value) * Math.cos(angleSlice*i - Math.PI/2))\r\n    //         .attr(\"cy\", rScale(d.value) * Math.sin(angleSlice*i - Math.PI/2))\r\n    //         .attr(\"fill\", 'black')\r\n    //     })\r\n    // })\r\n\r\n\r\n\t//Set up the small tooltip for when you hover over a circle\r\n\tvar tooltip = g.append(\"text\")\r\n\t\t.attr(\"class\", \"tooltip\")\r\n\t\t.style(\"opacity\", 0);\r\n\r\n\t/////////////////////////////////////////////////////////\r\n\t/////////////////// Helper Function /////////////////////\r\n\t/////////////////////////////////////////////////////////\r\n\r\n\t//Taken from http://bl.ocks.org/mbostock/7555321\r\n\t//Wraps SVG text\r\n\tfunction wrap(text, width) {\r\n\t  text.each(function() {\r\n\t\tvar text = d3.select(this),\r\n\t\t\twords = text.text().split(/\\s+/).reverse(),\r\n\t\t\tword,\r\n\t\t\tline = [],\r\n\t\t\tlineNumber = 0,\r\n\t\t\tlineHeight = 1.4, // ems\r\n\t\t\ty = text.attr(\"y\"),\r\n\t\t\tx = text.attr(\"x\"),\r\n\t\t\tdy = parseFloat(text.attr(\"dy\")),\r\n\t\t\ttspan = text.text(null).append(\"tspan\").attr(\"x\", x).attr(\"y\", y).attr(\"dy\", dy + \"em\");\r\n\r\n\t\twhile (word = words.pop()) {\r\n\t\t  line.push(word);\r\n\t\t  tspan.text(line.join(\" \"));\r\n\t\t  if (tspan.node().getComputedTextLength() > width) {\r\n\t\t\tline.pop();\r\n\t\t\ttspan.text(line.join(\" \"));\r\n\t\t\tline = [word];\r\n\t\t\ttspan = text.append(\"tspan\").attr(\"x\", x).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\r\n\t\t  }\r\n\t\t}\r\n\t  });\r\n\t}//wrap\r\n\r\n}//RadarChart\r\n","import React, {Component} from \"react\";\nimport * as d3 from \"d3\";\nimport {colorCategory, colorScale} from \"../utils/constant\";\nimport {select} from 'd3-selection'\nimport '../../css/networkGraph.css'\n\n\n\nconst scale = d3.scaleOrdinal(d3.schemeCategory10);\nconst color = d => scale(d.group)\n\nconst drag = simulation => {\n\n    function dragstarted(event) {\n        if (!event.active) simulation.alphaTarget(0.3).restart();\n        event.subject.fx = event.subject.x;\n        event.subject.fy = event.subject.y;\n    }\n\n    function dragged(event) {\n        event.subject.fx = event.x;\n        event.subject.fy = event.y;\n    }\n\n    function dragended(event) {\n        if (!event.active) simulation.alphaTarget(0);\n        event.subject.fx = null;\n        event.subject.fy = null;\n    }\n\n    return d3.drag()\n        .on(\"start\", dragstarted)\n        .on(\"drag\", dragged)\n        .on(\"end\", dragended);\n}\n\nexport default class NetworkGraph extends Component {\n    constructor(props) {\n        super(props)\n        this.createNetwork = this.createNetwork.bind(this)\n        this.state = {'selected': 0, 'refresh': 1}\n    }\n\n    componentDidMount() {\n        if (this.state['refresh'] === 1) this.createNetwork()\n    }\n\n    componentDidUpdate() {\n        if (this.state['refresh'] === 1) this.createNetwork()\n    }\n\n\n    createNetwork() {\n        const food_link = this.props.food_link;\n        const food_data = this.props.food_data;\n        const self = this;\n        const root = this.node;\n        const width = self.props.width;\n        const height = self.props.height;\n        const imageRadius = 20;\n\n        select(root).selectAll('*').remove();\n\n        const links = food_link.map(d => Object.create(d));\n        const nodes = food_data.map(d => Object.create(d));\n\n        const tooltip = d3.select(\"body\")\n            .append(\"div\")\n            .attr(\"class\", \"tooltip\")\n            .style(\"opacity\", 0);\n\n        const simulation = d3.forceSimulation(nodes)\n            .force(\"link\", d3.forceLink(links).id(d => d.id))\n            .force(\"charge\", d3.forceManyBody().strength(d => d.__proto__.group === 'Wine' ? -500 : -300))\n            .force(\"center\", d3.forceCenter(width / 2.5, height / 2))\n\n        const link = select(root).append(\"g\")\n            .attr(\"stroke\", \"#505050\")\n            .attr(\"stroke-opacity\", 0.5)\n            .selectAll(\"line\")\n            .data(links)\n            .join(\"line\")\n            .attr(\"stroke-width\", d => Math.sqrt(d.count) / 100);\n\n        const gNode = select(root).selectAll('g.node')\n            .data(nodes.filter(d => d.__proto__.group !== 'Wine'))\n            .join('svg:g')\n            .attr('class', 'node');\n\n        const defs = gNode.append('defs');\n        defs.append('pattern')\n            .attr(\"id\", d => \"image\" + d.__proto__.id)\n            .attr(\"width\", 1)\n            .attr(\"height\", 1)\n            .append(\"svg:image\")\n            .attr(\"xlink:href\", d => 'http:' + d.__proto__.image)\n            .attr(\"width\", imageRadius * 2)\n            .attr(\"height\", imageRadius * 2);\n\n        const clickEvent =  d => {\n            const id = d.target.__data__.__proto__.id;\n            if (self.state.selected !== id) {\n                const neighbors = links.reduce((a, b) => {\n                    if (b.__proto__.source === id) a.add(b.__proto__.target);\n                    else if (b.__proto__.target === id) a.add(b.__proto__.source);\n                    return a\n                }, new Set());\n                neighbors.add(id);\n                select(root).selectAll('circle.node').attr('opacity', e => neighbors.has(e.__proto__.id)? (e.__proto__.group === 'Wine' ?1 : 0.9) : 0.3);\n                self.setState({'selected': id, 'refresh': 0});\n            }\n            else {\n                select(root).selectAll('circle.node').attr('opacity', 0.9);\n                self.setState({'selected': null, 'refresh': 0});\n            }\n            self.props.parentCallback(self.state.selected)\n        };\n\n        const mouseOverEvent = d => {\n            const data = d.target.__data__.__proto__\n            tooltip.transition()\n                .duration(100)\n                .style(\"opacity\", .8);\n            tooltip.html(\"<p>Name: \" + data.name + \"</p> <p> Category: \" +  `${data.group === 'Wine' ? data.type_name : data.group}` + '</p>')\n                .style(\"left\", () => d.pageX + 'px')\n                .style(\"top\", () => d.pageY + 'px');\n        };\n\n        const mouseOutEvent = () => {\n            tooltip.transition()\n                .duration(100)\n                .style(\"opacity\", 0);\n        };\n\n        const mouseMoveEvent = d => {\n            tooltip.style(\"left\", (d.pageX) + \"px\")\n                .style(\"top\", (d.pageY) + \"px\");\n        };\n\n\n        const node = gNode.append('circle')\n            .attr('class', 'node')\n            .attr('r', imageRadius)\n            .attr(\"fill\", color)\n            .attr(\"stroke\", d => colorCategory[d.__proto__.group])\n            .attr(\"stroke-width\", 3)\n            .attr('stroke-opacity', 0.7)\n            .attr('fill', d => `url(#image${d.__proto__.id}`)\n            .attr('opacity', 0.9)\n            .call(drag(simulation))\n            .on('click', clickEvent)\n            .on('mouseover.tooltip', mouseOverEvent)\n            .on(\"mouseout.tooltip\", mouseOutEvent)\n            .on(\"mousemove\", mouseMoveEvent);\n\n\n\n        const wine = select(root).append(\"g\")\n            .attr(\"stroke\", \"#fff\")\n            .attr(\"stroke-width\", 1.5)\n            .selectAll(\"circle\")\n            .data(nodes.filter(d => d.__proto__.group === 'Wine'))\n            .join(\"circle\")\n            .attr('class', 'node')\n            .attr('r', 10)\n            .attr(\"fill\", d => colorScale[d.__proto__.type_name])\n            .call(drag(simulation))\n            .on('click', clickEvent)\n            .on('mouseover.tooltip', mouseOverEvent)\n            .on(\"mouseout.tooltip\", mouseOutEvent)\n            .on(\"mousemove\", mouseMoveEvent);\n\n        // node.append(\"title\")\n        //     .text(d => d.name);\n\n        simulation.on(\"tick\", () => {\n            link\n                .attr(\"x1\", d => d.source.x)\n                .attr(\"y1\", d => d.source.y)\n                .attr(\"x2\", d => d.target.x)\n                .attr(\"y2\", d => d.target.y);\n\n            node\n                .attr(\"cx\", d => d.x)\n                .attr(\"cy\", d => d.y);\n\n            wine\n                .attr(\"cx\", d => d.x)\n                .attr(\"cy\", d => d.y);\n        });\n\n        const wineColor = Object.keys(colorScale).reduce((a, b) => {\n            a.push({\"name\": b, \"color\": colorScale[b]})\n            return a\n        }, []);\n\n\n        const wineLegend = select(root).selectAll('.wine-legend')\n            .data(wineColor)\n            .enter()\n            .append('g')\n            .attr('class', 'wine-legend')\n            .attr('transform', (_, i) => `translate(0, ${i * 20})`)\n        ;\n\n        wineLegend.append('rect')\n            .attr('width', 10)\n            .attr('height', 10)\n            .attr('stroke', 'black')\n            .style('stroke-width', 0.5)\n            .style('fill', d => d.color)\n        ;\n\n        wineLegend.append('text')\n            .attr('x', 15)\n            .attr('y', 8)\n            .attr('font-size', 10)\n            .text(d => d.name)\n        ;\n\n        const foodColor = Object.keys(colorCategory).reduce((a, b) => {\n            a.push({\"name\": b, \"color\": colorCategory[b]})\n            return a\n        }, []);\n\n\n        const foodLegend = select(root).selectAll('.food-legend')\n            .data(foodColor)\n            .enter()\n            .append('g')\n            .attr('class', 'food-legend')\n            .attr('transform', (_, i) => {\n                return `translate(100, ${i * 20 + 8})`\n            })\n        ;\n\n        foodLegend.append('circle')\n            .attr('r', 6)\n            .attr('stroke', d => d.color)\n            .attr('stroke-width', 1.5)\n            .attr('fill', 'none');\n\n        foodLegend.append('text')\n            .attr('x', 15)\n            .attr('y', 2)\n            .attr('font-size', 10)\n            .text(d => d.name)\n        ;\n    }\n\n    render() {\n        return <svg ref={node => this.node = node}\n            // viewBox={[this.props.width / 4, this.props.height / 4, this.props.width / 2, this.props.height / 2]}\n                    width={this.props.width} height={this.props.height}>\n        </svg>\n    }\n}\n","import React from \"react\";\nimport NetworkGraph from './networkGraph'\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport '../../css/wineCard.css'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst food_data = require('../../data/style_food_data');\nconst food_link = require('../../data/style_food_link');\nconst wine_styles = require('../../data/style_wines');\n\nfunction createData(name, calories, fat, carbs, protein) {\n    return {name, calories, fat, carbs, protein};\n}\n\nconst rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nexport default class FoodNetwork extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleClickOpen = this.handleClickOpen.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    state = {\n        dimensions: {\n            width: 1000,\n            height: 800\n        },\n        selectedStyle: null,\n        open: false\n    };\n\n    networkCallbackFunction = (style) => {\n        if (typeof style === 'string' && style.startsWith('w')) {\n            const filterData = wine_styles.filter(x => x.id === style)[0]\n            this.setState({selectedStyle: filterData});\n            console.log(filterData)\n        } else this.setState({selectedStyle: null})\n    };\n\n\n    componentDidMount() {\n        this.setState({\n            dimensions: {\n                width: this.container.offsetWidth,\n                height: this.container.offsetHeight\n            }\n        })\n    }\n\n\n    handleClickOpen = () => {\n        this.setState({open: true})\n    };\n\n    handleClose = () => {\n        this.setState({open: false})\n    };\n\n\n    renderContent() {\n        const {dimensions} = this.state;\n        const style = this.state.selectedStyle;\n\n        return (\n            <div>\n                <Grid container spacing={1}>\n                    <Grid item>\n                        <NetworkGraph width={dimensions.width} height={dimensions.height} food_data={food_data}\n                                      food_link={food_link} parentCallback={this.networkCallbackFunction}/>\n                    </Grid>\n                    { this.state.selectedStyle ? <Button className=\"show-button\" variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen}>\n                        Show me more about the wine style\n                    </Button> : null }\n                    <Dialog maxWidth={\"md\"} open={this.state.open} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\n                        {\n                            style ?\n                                <div className=\"wine-card\">\n                                    <DialogTitle>\n                                        <Typography variant=\"h5\" align=\"center\" gutterBottom>\n                                            {style.name}\n                                        </Typography>\n                                    </DialogTitle>\n                                    <Typography align=\"center\" gutterBottom>\n                                        <b>Style Acidity</b>: {style.wines[0].style_acidity_desp} &nbsp;&nbsp;&nbsp;\n                                        <b>Style body</b>: {style.wines[0].style_body_desp}\n                                    </Typography>\n                                    <TableContainer>\n                                        <Table className=\"wine-table\">\n                                            <TableHead>\n                                                <TableRow>\n                                                    <TableCell>Name</TableCell>\n                                                    <TableCell align=\"right\">Rating</TableCell>\n                                                    <TableCell align=\"right\">Price</TableCell>\n                                                    <TableCell align=\"right\">Country</TableCell>\n                                                    <TableCell align=\"right\">Region</TableCell>\n                                                </TableRow>\n                                            </TableHead>\n                                            <TableBody>\n                                                {this.state.selectedStyle.wines.map((row) => (\n                                                    <TableRow key={row.id}>\n                                                        <TableCell component=\"th\" scope=\"row\">\n                                                            {row.name}\n                                                        </TableCell>\n                                                        <TableCell align=\"right\">{row.rating}</TableCell>\n                                                        <TableCell align=\"right\">{row.price}</TableCell>\n                                                        <TableCell align=\"right\">{row.country_name}</TableCell>\n                                                        <TableCell align=\"right\">{row.region_name}</TableCell>\n                                                    </TableRow>\n                                                ))}\n                                            </TableBody>\n                                        </Table>\n                                    </TableContainer>\n                                </div>\n                                : null\n                        }\n                    </Dialog>\n                </Grid>\n            </div>\n\n        );\n    }\n\n    render() {\n        const {dimensions} = this.state;\n\n        return (\n            <div ref={el => (this.container = el)}>\n                {dimensions && this.renderContent()}\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport Container from '@material-ui/core/Container';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { Route, MemoryRouter, Switch } from 'react-router';\n\nimport Links from './components/navBar'\nimport WineMap from './components/map/map'\nimport StyleRadar from './components/radar/radar'\nimport RadialTree from './components/chord/radialTree'\nimport FoodNetwork from './components/network/network'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        backgroundColor: \"rgba(229,230,230,0.53)\"\n    },\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 4px',\n        ...theme.mixins.toolbar,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        backgroundColor:'#722f37'\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    menuButtonHidden: {\n        display: 'none',\n    },\n    title: {\n        flexGrow: 1,\n    },\n    drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9),\n        },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 240,\n    }\n}));\n\nexport default function App() {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(true);\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <MemoryRouter initialEntries={['/map']} initialIndex={0}>\n            <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n                <Toolbar className={classes.toolbar}>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                        Wine Expert\n                    </Typography>\n\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                variant=\"permanent\"\n                classes={{\n                    paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n                }}\n                open={open}\n            >\n                <div className={classes.toolbarIcon}>\n                    <IconButton onClick={handleDrawerClose}>\n                        <ChevronLeftIcon />\n                    </IconButton>\n                </div>\n                <Divider />\n                <Links/>\n            </Drawer>\n            <div className={classes.content}>\n                <Container maxWidth='xl' className={classes.container}>\n                    <div className={classes.appBarSpacer} />\n                <Switch>\n                    <Route path='/map'>\n                        <WineMap/>\n                    </Route>\n                    <Route path='/radar'>\n                        <StyleRadar/>\n                    </Route>\n                    <Route path='/tree'>\n                        <RadialTree/>\n                    </Route>\n                    <Route path='/network'>\n                        <FoodNetwork/>\n                    </Route>\n                </Switch>\n                </Container>\n            </div>\n            </MemoryRouter>\n        </div>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}